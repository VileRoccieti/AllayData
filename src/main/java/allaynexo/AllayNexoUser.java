/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package allaynexo;

import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author plobb
 */
public class AllayNexoUser extends javax.swing.JFrame {

    public String userID = "0";

    /**
     * Creates new form AllayNexoUser
     */
    public AllayNexoUser() {
        initComponents();
        initializeApp();
        cargarProductosParaTienda();
        initializeImages();
    }

    public String balanceDescontado = "0";
    public String montoOriginalPago = "";
    boolean direccionConfirmada = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainAppSelector = new allaynexo.PanelRound();
        AllayNexoIcon = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        InicioMainPanel = new allaynexo.PanelRound();
        InicioIcon = new javax.swing.JLabel();
        BInicioMain = new javax.swing.JButton();
        TiendaOnlineMainPanel = new allaynexo.PanelRound();
        TiendaIcon = new javax.swing.JLabel();
        BTiendaOnlinerMain = new javax.swing.JButton();
        NotificacionesMainPanel = new allaynexo.PanelRound();
        NotificacionesIcon = new javax.swing.JLabel();
        BNotificacionesMain = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        HistorialPedidosMainPanel = new allaynexo.PanelRound();
        HistorialPedidosIcon = new javax.swing.JLabel();
        BHistorialPedidosMain = new javax.swing.JButton();
        HistorialPagosMainPanel = new allaynexo.PanelRound();
        HistorialPagosIcon = new javax.swing.JLabel();
        BHistorialPagosMain = new javax.swing.JButton();
        jLabel61 = new javax.swing.JLabel();
        BCerrarSesion = new javax.swing.JButton();
        MainTabs = new javax.swing.JTabbedPane();
        OverviewTab = new javax.swing.JPanel();
        TotalUsersOverviewPanel = new allaynexo.PanelRound();
        TotalUsersOverviewPanel3 = new allaynexo.PanelRound();
        TotalPedidosIconX = new javax.swing.JLabel();
        InicioTotalPedidosLabel = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        panelRound2 = new allaynexo.PanelRound();
        TotalUsersOverviewPanel9 = new allaynexo.PanelRound();
        TotalBalanceIconX = new javax.swing.JLabel();
        InicioBalanceUsuarioLabel = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        UserNameLabelMain = new javax.swing.JLabel();
        panelRound20 = new allaynexo.PanelRound();
        TotalUsersOverviewPanel10 = new allaynexo.PanelRound();
        TotalNotificacionesIconX = new javax.swing.JLabel();
        InicioNotificacionesSinLeerLabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        TiendaOnlineTab = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ProductsTable = new javax.swing.JTable();
        InputFiltroProducto = new javax.swing.JTextField();
        BFiltrarProductos = new javax.swing.JButton();
        jLabel60 = new javax.swing.JLabel();
        BProcesoPago = new javax.swing.JButton();
        panelRound1 = new allaynexo.PanelRound();
        jLabel47 = new javax.swing.JLabel();
        panelRound3 = new allaynexo.PanelRound();
        IDProductoLabel = new javax.swing.JLabel();
        panelRound4 = new allaynexo.PanelRound();
        IDNombreProductoLabel = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        panelRound5 = new allaynexo.PanelRound();
        IDCostoProductoLabel = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        panelRound6 = new allaynexo.PanelRound();
        IDMarcaProductoLabel = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        panelRound7 = new allaynexo.PanelRound();
        IDProveedorProductoLabel = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        panelRound8 = new allaynexo.PanelRound();
        StockProductoLabel = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        InputFiltroMarca = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        InputFiltroProveedor = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        InputFiltroPrecio1 = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        InputFiltroPrecio2 = new javax.swing.JTextField();
        InputFiltroEstado = new javax.swing.JComboBox<>();
        BReiniciarFiltros = new javax.swing.JButton();
        ProcesoPagoTab = new javax.swing.JPanel();
        panelRound9 = new allaynexo.PanelRound();
        jLabel48 = new javax.swing.JLabel();
        panelRound10 = new allaynexo.PanelRound();
        IDProductoLabelPago = new javax.swing.JLabel();
        panelRound11 = new allaynexo.PanelRound();
        IDNombreProductoLabelPago = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        panelRound12 = new allaynexo.PanelRound();
        IDCostoProductoLabelPago = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        panelRound13 = new allaynexo.PanelRound();
        IDMarcaProductoLabelPago = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        panelRound14 = new allaynexo.PanelRound();
        IDProveedorProductoLabelPago = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        panelRound15 = new allaynexo.PanelRound();
        PesoProductoLabelPago = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        InputDireccionPago = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        InputTelefonoPago = new javax.swing.JTextField();
        panelRound16 = new allaynexo.PanelRound();
        panelRound17 = new allaynexo.PanelRound();
        jLabel80 = new javax.swing.JLabel();
        InputEmailPago = new javax.swing.JTextField();
        panelRound18 = new allaynexo.PanelRound();
        jLabel31 = new javax.swing.JLabel();
        InputEntregaPago = new javax.swing.JComboBox<>();
        InputDestinoPago = new javax.swing.JComboBox<>();
        jLabel45 = new javax.swing.JLabel();
        InputMetodoPago = new javax.swing.JComboBox<>();
        jLabel43 = new javax.swing.JLabel();
        InputEntidadEmisoraPago = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        InputPlataformaPago = new javax.swing.JComboBox<>();
        BValidarPago = new javax.swing.JButton();
        panelRound19 = new allaynexo.PanelRound();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        DestinoPagoMostrarLabel = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        TipoEntregaLabelPago = new javax.swing.JLabel();
        MontoTotalPagoLabel = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        TerminalOrigenLabelPago = new javax.swing.JLabel();
        CostoEnvioPagoLabel = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        InputSimulacionPago = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        InputTerminalPago = new javax.swing.JComboBox<>();
        BRegresarTienda = new javax.swing.JButton();
        FondosPago = new javax.swing.JTextField();
        BAplicarFondos = new javax.swing.JButton();
        BConfirmarDireccion = new javax.swing.JButton();
        NotificacionesTab = new javax.swing.JPanel();
        BMarcarNotificacionLeido = new javax.swing.JButton();
        BEliminarNotificacion = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        NotificacionesUsuarioTabla = new javax.swing.JTable();
        HistorialPedidosTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        HistorialPedidosTable = new javax.swing.JTable();
        HistorialPagosTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PaymentsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainAppSelector.setBackground(new java.awt.Color(240, 240, 240));
        MainAppSelector.setRoundBottomLeft(15);
        MainAppSelector.setRoundBottomRight(15);
        MainAppSelector.setRoundTopLeft(15);
        MainAppSelector.setRoundTopRight(15);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(10, 10, 10));
        jLabel15.setText("AllayNexo");

        jLabel16.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(10, 10, 10));
        jLabel16.setText("v1.0");

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("GENERAL");

        InicioMainPanel.setBackground(new java.awt.Color(227, 227, 227));
        InicioMainPanel.setRoundBottomLeft(10);
        InicioMainPanel.setRoundBottomRight(10);
        InicioMainPanel.setRoundTopLeft(10);
        InicioMainPanel.setRoundTopRight(10);

        InicioIcon.setBackground(new java.awt.Color(1, 1, 1));

        BInicioMain.setBackground(new java.awt.Color(230, 230, 230));
        BInicioMain.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        BInicioMain.setForeground(new java.awt.Color(0, 0, 0));
        BInicioMain.setText("Inicio");
        BInicioMain.setToolTipText("");
        BInicioMain.setBorderPainted(false);
        BInicioMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BInicioMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InicioMainPanelLayout = new javax.swing.GroupLayout(InicioMainPanel);
        InicioMainPanel.setLayout(InicioMainPanelLayout);
        InicioMainPanelLayout.setHorizontalGroup(
            InicioMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InicioMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InicioIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BInicioMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        InicioMainPanelLayout.setVerticalGroup(
            InicioMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InicioMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InicioMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InicioIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BInicioMain, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap())
        );

        TiendaOnlineMainPanel.setBackground(new java.awt.Color(227, 227, 227));
        TiendaOnlineMainPanel.setRoundBottomLeft(10);
        TiendaOnlineMainPanel.setRoundBottomRight(10);
        TiendaOnlineMainPanel.setRoundTopLeft(10);
        TiendaOnlineMainPanel.setRoundTopRight(10);

        BTiendaOnlinerMain.setBackground(new java.awt.Color(230, 230, 230));
        BTiendaOnlinerMain.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        BTiendaOnlinerMain.setForeground(new java.awt.Color(0, 0, 0));
        BTiendaOnlinerMain.setText("Tienda Online");
        BTiendaOnlinerMain.setToolTipText("");
        BTiendaOnlinerMain.setBorderPainted(false);
        BTiendaOnlinerMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTiendaOnlinerMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TiendaOnlineMainPanelLayout = new javax.swing.GroupLayout(TiendaOnlineMainPanel);
        TiendaOnlineMainPanel.setLayout(TiendaOnlineMainPanelLayout);
        TiendaOnlineMainPanelLayout.setHorizontalGroup(
            TiendaOnlineMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TiendaOnlineMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TiendaIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTiendaOnlinerMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        TiendaOnlineMainPanelLayout.setVerticalGroup(
            TiendaOnlineMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TiendaOnlineMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TiendaOnlineMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(TiendaIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BTiendaOnlinerMain, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap())
        );

        NotificacionesMainPanel.setBackground(new java.awt.Color(227, 227, 227));
        NotificacionesMainPanel.setRoundBottomLeft(10);
        NotificacionesMainPanel.setRoundBottomRight(10);
        NotificacionesMainPanel.setRoundTopLeft(10);
        NotificacionesMainPanel.setRoundTopRight(10);

        BNotificacionesMain.setBackground(new java.awt.Color(230, 230, 230));
        BNotificacionesMain.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        BNotificacionesMain.setForeground(new java.awt.Color(0, 0, 0));
        BNotificacionesMain.setText("Notificaciones");
        BNotificacionesMain.setBorderPainted(false);
        BNotificacionesMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BNotificacionesMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NotificacionesMainPanelLayout = new javax.swing.GroupLayout(NotificacionesMainPanel);
        NotificacionesMainPanel.setLayout(NotificacionesMainPanelLayout);
        NotificacionesMainPanelLayout.setHorizontalGroup(
            NotificacionesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificacionesMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NotificacionesIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BNotificacionesMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        NotificacionesMainPanelLayout.setVerticalGroup(
            NotificacionesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NotificacionesMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(NotificacionesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(NotificacionesIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BNotificacionesMain, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel18.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("TRANSACCIONES");

        HistorialPedidosMainPanel.setBackground(new java.awt.Color(227, 227, 227));
        HistorialPedidosMainPanel.setRoundBottomLeft(10);
        HistorialPedidosMainPanel.setRoundBottomRight(10);
        HistorialPedidosMainPanel.setRoundTopLeft(10);
        HistorialPedidosMainPanel.setRoundTopRight(10);

        HistorialPedidosIcon.setBackground(new java.awt.Color(1, 1, 1));

        BHistorialPedidosMain.setBackground(new java.awt.Color(230, 230, 230));
        BHistorialPedidosMain.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        BHistorialPedidosMain.setForeground(new java.awt.Color(0, 0, 0));
        BHistorialPedidosMain.setText("Historial de Pedidos");
        BHistorialPedidosMain.setBorderPainted(false);
        BHistorialPedidosMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BHistorialPedidosMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HistorialPedidosMainPanelLayout = new javax.swing.GroupLayout(HistorialPedidosMainPanel);
        HistorialPedidosMainPanel.setLayout(HistorialPedidosMainPanelLayout);
        HistorialPedidosMainPanelLayout.setHorizontalGroup(
            HistorialPedidosMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialPedidosMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HistorialPedidosIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BHistorialPedidosMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        HistorialPedidosMainPanelLayout.setVerticalGroup(
            HistorialPedidosMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HistorialPedidosMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(HistorialPedidosMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HistorialPedidosIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BHistorialPedidosMain, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap())
        );

        HistorialPagosMainPanel.setBackground(new java.awt.Color(227, 227, 227));
        HistorialPagosMainPanel.setRoundBottomLeft(10);
        HistorialPagosMainPanel.setRoundBottomRight(10);
        HistorialPagosMainPanel.setRoundTopLeft(10);
        HistorialPagosMainPanel.setRoundTopRight(10);

        HistorialPagosIcon.setBackground(new java.awt.Color(1, 1, 1));

        BHistorialPagosMain.setBackground(new java.awt.Color(230, 230, 230));
        BHistorialPagosMain.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        BHistorialPagosMain.setForeground(new java.awt.Color(0, 0, 0));
        BHistorialPagosMain.setText("Historial de Pagos");
        BHistorialPagosMain.setBorderPainted(false);
        BHistorialPagosMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BHistorialPagosMainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HistorialPagosMainPanelLayout = new javax.swing.GroupLayout(HistorialPagosMainPanel);
        HistorialPagosMainPanel.setLayout(HistorialPagosMainPanelLayout);
        HistorialPagosMainPanelLayout.setHorizontalGroup(
            HistorialPagosMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialPagosMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HistorialPagosIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BHistorialPagosMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        HistorialPagosMainPanelLayout.setVerticalGroup(
            HistorialPagosMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HistorialPagosMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(HistorialPagosMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HistorialPagosIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BHistorialPagosMain, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel61.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(51, 51, 51));
        jLabel61.setText("SESION");
        jLabel61.setToolTipText("");

        BCerrarSesion.setText("Cerrar Sesion");
        BCerrarSesion.setToolTipText("");
        BCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainAppSelectorLayout = new javax.swing.GroupLayout(MainAppSelector);
        MainAppSelector.setLayout(MainAppSelectorLayout);
        MainAppSelectorLayout.setHorizontalGroup(
            MainAppSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainAppSelectorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainAppSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HistorialPedidosMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HistorialPagosMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InicioMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TiendaOnlineMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NotificacionesMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BCerrarSesion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MainAppSelectorLayout.createSequentialGroup()
                        .addGroup(MainAppSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainAppSelectorLayout.createSequentialGroup()
                                .addComponent(AllayNexoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16))
                            .addGroup(MainAppSelectorLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel17))
                            .addComponent(jLabel18)
                            .addComponent(jLabel61))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        MainAppSelectorLayout.setVerticalGroup(
            MainAppSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainAppSelectorLayout.createSequentialGroup()
                .addGroup(MainAppSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AllayNexoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainAppSelectorLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(MainAppSelectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InicioMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TiendaOnlineMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NotificacionesMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HistorialPedidosMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HistorialPagosMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BCerrarSesion)
                .addGap(4, 4, 4))
        );

        MainTabs.setBackground(new java.awt.Color(35, 35, 35));

        TotalUsersOverviewPanel.setBackground(new java.awt.Color(80, 81, 249));
        TotalUsersOverviewPanel.setRoundBottomLeft(15);
        TotalUsersOverviewPanel.setRoundBottomRight(15);
        TotalUsersOverviewPanel.setRoundTopLeft(15);
        TotalUsersOverviewPanel.setRoundTopRight(15);

        TotalUsersOverviewPanel3.setBackground(new java.awt.Color(120, 111, 249));
        TotalUsersOverviewPanel3.setRoundBottomLeft(15);
        TotalUsersOverviewPanel3.setRoundBottomRight(15);
        TotalUsersOverviewPanel3.setRoundTopLeft(15);
        TotalUsersOverviewPanel3.setRoundTopRight(15);

        javax.swing.GroupLayout TotalUsersOverviewPanel3Layout = new javax.swing.GroupLayout(TotalUsersOverviewPanel3);
        TotalUsersOverviewPanel3.setLayout(TotalUsersOverviewPanel3Layout);
        TotalUsersOverviewPanel3Layout.setHorizontalGroup(
            TotalUsersOverviewPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalUsersOverviewPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalPedidosIconX, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TotalUsersOverviewPanel3Layout.setVerticalGroup(
            TotalUsersOverviewPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalUsersOverviewPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalPedidosIconX, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InicioTotalPedidosLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        InicioTotalPedidosLabel.setForeground(new java.awt.Color(255, 255, 255));
        InicioTotalPedidosLabel.setText("00,000");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Total de Pedidos");

        javax.swing.GroupLayout TotalUsersOverviewPanelLayout = new javax.swing.GroupLayout(TotalUsersOverviewPanel);
        TotalUsersOverviewPanel.setLayout(TotalUsersOverviewPanelLayout);
        TotalUsersOverviewPanelLayout.setHorizontalGroup(
            TotalUsersOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TotalUsersOverviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TotalUsersOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TotalUsersOverviewPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(97, 97, 97))
                    .addGroup(TotalUsersOverviewPanelLayout.createSequentialGroup()
                        .addComponent(InicioTotalPedidosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addComponent(TotalUsersOverviewPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        TotalUsersOverviewPanelLayout.setVerticalGroup(
            TotalUsersOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalUsersOverviewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TotalUsersOverviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TotalUsersOverviewPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InicioTotalPedidosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addContainerGap())
        );

        panelRound2.setBackground(new java.awt.Color(33, 221, 82));
        panelRound2.setRoundBottomLeft(15);
        panelRound2.setRoundBottomRight(15);
        panelRound2.setRoundTopLeft(15);
        panelRound2.setRoundTopRight(15);

        TotalUsersOverviewPanel9.setBackground(new java.awt.Color(73, 231, 102));
        TotalUsersOverviewPanel9.setRoundBottomLeft(15);
        TotalUsersOverviewPanel9.setRoundBottomRight(15);
        TotalUsersOverviewPanel9.setRoundTopLeft(15);
        TotalUsersOverviewPanel9.setRoundTopRight(15);

        javax.swing.GroupLayout TotalUsersOverviewPanel9Layout = new javax.swing.GroupLayout(TotalUsersOverviewPanel9);
        TotalUsersOverviewPanel9.setLayout(TotalUsersOverviewPanel9Layout);
        TotalUsersOverviewPanel9Layout.setHorizontalGroup(
            TotalUsersOverviewPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalUsersOverviewPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalBalanceIconX, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TotalUsersOverviewPanel9Layout.setVerticalGroup(
            TotalUsersOverviewPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalUsersOverviewPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalBalanceIconX, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InicioBalanceUsuarioLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        InicioBalanceUsuarioLabel.setForeground(new java.awt.Color(255, 255, 255));
        InicioBalanceUsuarioLabel.setText("00,000");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Balance de la Cuenta");
        jLabel23.setToolTipText("");

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                        .addComponent(InicioBalanceUsuarioLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(TotalUsersOverviewPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelRound2Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
                        .addGap(138, 138, 138))))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InicioBalanceUsuarioLabel)
                    .addComponent(TotalUsersOverviewPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        UserNameLabelMain.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        UserNameLabelMain.setText("Bienvenido(a), User");

        panelRound20.setBackground(new java.awt.Color(244, 204, 0));
        panelRound20.setRoundBottomLeft(15);
        panelRound20.setRoundBottomRight(15);
        panelRound20.setRoundTopLeft(15);
        panelRound20.setRoundTopRight(15);

        TotalUsersOverviewPanel10.setBackground(new java.awt.Color(224, 194, 0));
        TotalUsersOverviewPanel10.setRoundBottomLeft(15);
        TotalUsersOverviewPanel10.setRoundBottomRight(15);
        TotalUsersOverviewPanel10.setRoundTopLeft(15);
        TotalUsersOverviewPanel10.setRoundTopRight(15);

        javax.swing.GroupLayout TotalUsersOverviewPanel10Layout = new javax.swing.GroupLayout(TotalUsersOverviewPanel10);
        TotalUsersOverviewPanel10.setLayout(TotalUsersOverviewPanel10Layout);
        TotalUsersOverviewPanel10Layout.setHorizontalGroup(
            TotalUsersOverviewPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalUsersOverviewPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalNotificacionesIconX, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TotalUsersOverviewPanel10Layout.setVerticalGroup(
            TotalUsersOverviewPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalUsersOverviewPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalNotificacionesIconX, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InicioNotificacionesSinLeerLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        InicioNotificacionesSinLeerLabel.setForeground(new java.awt.Color(255, 255, 255));
        InicioNotificacionesSinLeerLabel.setText("0");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Notificaciones");
        jLabel25.setToolTipText("");

        javax.swing.GroupLayout panelRound20Layout = new javax.swing.GroupLayout(panelRound20);
        panelRound20.setLayout(panelRound20Layout);
        panelRound20Layout.setHorizontalGroup(
            panelRound20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound20Layout.createSequentialGroup()
                        .addComponent(InicioNotificacionesSinLeerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(TotalUsersOverviewPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panelRound20Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
                        .addGap(138, 138, 138))))
        );
        panelRound20Layout.setVerticalGroup(
            panelRound20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InicioNotificacionesSinLeerLabel)
                    .addComponent(TotalUsersOverviewPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel25)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout OverviewTabLayout = new javax.swing.GroupLayout(OverviewTab);
        OverviewTab.setLayout(OverviewTabLayout);
        OverviewTabLayout.setHorizontalGroup(
            OverviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OverviewTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OverviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TotalUsersOverviewPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserNameLabelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        OverviewTabLayout.setVerticalGroup(
            OverviewTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OverviewTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UserNameLabelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(TotalUsersOverviewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(panelRound2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(panelRound20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MainTabs.addTab("Overview", OverviewTab);

        TiendaOnlineTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Producto", "Nombre Producto", "Costo", "Marca Producto", "Proveedor", "Stock"
            }
        ));
        ProductsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductsTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(ProductsTable);

        TiendaOnlineTab.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 6, 720, 460));

        InputFiltroProducto.setToolTipText("Introduce el usuario aqui");
        InputFiltroProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFiltroProductoActionPerformed(evt);
            }
        });
        TiendaOnlineTab.add(InputFiltroProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 515, 200, -1));

        BFiltrarProductos.setBackground(new java.awt.Color(102, 102, 255));
        BFiltrarProductos.setForeground(new java.awt.Color(255, 255, 255));
        BFiltrarProductos.setText("Filtrar");
        BFiltrarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BFiltrarProductosActionPerformed(evt);
            }
        });
        TiendaOnlineTab.add(BFiltrarProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 515, 88, -1));

        jLabel60.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel60.setText("Producto");
        jLabel60.setToolTipText("");
        TiendaOnlineTab.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 513, -1, -1));

        BProcesoPago.setBackground(new java.awt.Color(0, 204, 51));
        BProcesoPago.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        BProcesoPago.setForeground(new java.awt.Color(255, 255, 255));
        BProcesoPago.setText("Comprar");
        BProcesoPago.setToolTipText("");
        BProcesoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BProcesoPagoActionPerformed(evt);
            }
        });
        TiendaOnlineTab.add(BProcesoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(868, 472, 202, 69));

        panelRound1.setBackground(new java.awt.Color(230, 230, 230));
        panelRound1.setRoundBottomLeft(15);
        panelRound1.setRoundBottomRight(15);
        panelRound1.setRoundTopLeft(15);
        panelRound1.setRoundTopRight(15);

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(1, 1, 1));
        jLabel47.setText("ID Producto");
        jLabel47.setToolTipText("");

        panelRound3.setBackground(new java.awt.Color(200, 200, 200));
        panelRound3.setRoundBottomLeft(15);
        panelRound3.setRoundBottomRight(15);
        panelRound3.setRoundTopLeft(15);
        panelRound3.setRoundTopRight(15);

        IDProductoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDProductoLabel.setForeground(new java.awt.Color(10, 10, 10));
        IDProductoLabel.setText("Ninguno Seleccionado");
        IDProductoLabel.setToolTipText("");

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelRound4.setBackground(new java.awt.Color(200, 200, 200));
        panelRound4.setRoundBottomLeft(15);
        panelRound4.setRoundBottomRight(15);
        panelRound4.setRoundTopLeft(15);
        panelRound4.setRoundTopRight(15);

        IDNombreProductoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDNombreProductoLabel.setForeground(new java.awt.Color(10, 10, 10));
        IDNombreProductoLabel.setText("Ninguno Seleccionado");
        IDNombreProductoLabel.setToolTipText("");

        javax.swing.GroupLayout panelRound4Layout = new javax.swing.GroupLayout(panelRound4);
        panelRound4.setLayout(panelRound4Layout);
        panelRound4Layout.setHorizontalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDNombreProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound4Layout.setVerticalGroup(
            panelRound4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDNombreProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel63.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(1, 1, 1));
        jLabel63.setText("Nombre del Producto");
        jLabel63.setToolTipText("");

        jLabel64.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(1, 1, 1));
        jLabel64.setText("Costo");
        jLabel64.setToolTipText("");

        panelRound5.setBackground(new java.awt.Color(200, 200, 200));
        panelRound5.setRoundBottomLeft(15);
        panelRound5.setRoundBottomRight(15);
        panelRound5.setRoundTopLeft(15);
        panelRound5.setRoundTopRight(15);

        IDCostoProductoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDCostoProductoLabel.setForeground(new java.awt.Color(10, 10, 10));
        IDCostoProductoLabel.setText("Ninguno Seleccionado");
        IDCostoProductoLabel.setToolTipText("");

        javax.swing.GroupLayout panelRound5Layout = new javax.swing.GroupLayout(panelRound5);
        panelRound5.setLayout(panelRound5Layout);
        panelRound5Layout.setHorizontalGroup(
            panelRound5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDCostoProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound5Layout.setVerticalGroup(
            panelRound5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDCostoProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel66.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(1, 1, 1));
        jLabel66.setText("Marca");
        jLabel66.setToolTipText("");

        panelRound6.setBackground(new java.awt.Color(200, 200, 200));
        panelRound6.setRoundBottomLeft(15);
        panelRound6.setRoundBottomRight(15);
        panelRound6.setRoundTopLeft(15);
        panelRound6.setRoundTopRight(15);

        IDMarcaProductoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDMarcaProductoLabel.setForeground(new java.awt.Color(10, 10, 10));
        IDMarcaProductoLabel.setText("Ninguno Seleccionado");
        IDMarcaProductoLabel.setToolTipText("");

        javax.swing.GroupLayout panelRound6Layout = new javax.swing.GroupLayout(panelRound6);
        panelRound6.setLayout(panelRound6Layout);
        panelRound6Layout.setHorizontalGroup(
            panelRound6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDMarcaProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound6Layout.setVerticalGroup(
            panelRound6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDMarcaProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel68.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(1, 1, 1));
        jLabel68.setText("Proveedor");
        jLabel68.setToolTipText("");

        panelRound7.setBackground(new java.awt.Color(200, 200, 200));
        panelRound7.setRoundBottomLeft(15);
        panelRound7.setRoundBottomRight(15);
        panelRound7.setRoundTopLeft(15);
        panelRound7.setRoundTopRight(15);

        IDProveedorProductoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDProveedorProductoLabel.setForeground(new java.awt.Color(10, 10, 10));
        IDProveedorProductoLabel.setText("Ninguno Seleccionado");
        IDProveedorProductoLabel.setToolTipText("");

        javax.swing.GroupLayout panelRound7Layout = new javax.swing.GroupLayout(panelRound7);
        panelRound7.setLayout(panelRound7Layout);
        panelRound7Layout.setHorizontalGroup(
            panelRound7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProveedorProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound7Layout.setVerticalGroup(
            panelRound7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProveedorProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel70.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(1, 1, 1));
        jLabel70.setText("Stock / Cantidad Disponible");
        jLabel70.setToolTipText("");

        panelRound8.setBackground(new java.awt.Color(200, 200, 200));
        panelRound8.setRoundBottomLeft(15);
        panelRound8.setRoundBottomRight(15);
        panelRound8.setRoundTopLeft(15);
        panelRound8.setRoundTopRight(15);

        StockProductoLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        StockProductoLabel.setForeground(new java.awt.Color(10, 10, 10));
        StockProductoLabel.setText("Ninguno Seleccionado");
        StockProductoLabel.setToolTipText("");

        javax.swing.GroupLayout panelRound8Layout = new javax.swing.GroupLayout(panelRound8);
        panelRound8.setLayout(panelRound8Layout);
        panelRound8Layout.setHorizontalGroup(
            panelRound8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StockProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound8Layout.setVerticalGroup(
            panelRound8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StockProductoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRound3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(jLabel63)
                            .addComponent(jLabel64)
                            .addComponent(jLabel66)
                            .addComponent(jLabel68)
                            .addComponent(jLabel70))
                        .addGap(0, 95, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel63)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel64)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel66)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel68)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel70)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        TiendaOnlineTab.add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(741, 6, -1, -1));

        jLabel72.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(1, 1, 1));
        jLabel72.setText("Filtros");
        jLabel72.setToolTipText("");
        TiendaOnlineTab.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 473, -1, -1));

        jLabel73.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel73.setText("Marca");
        jLabel73.setToolTipText("");
        TiendaOnlineTab.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(479, 513, -1, -1));

        InputFiltroMarca.setToolTipText("Introduce el usuario aqui");
        InputFiltroMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFiltroMarcaActionPerformed(evt);
            }
        });
        TiendaOnlineTab.add(InputFiltroMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 515, 205, -1));

        jLabel74.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel74.setText("Proveedor");
        jLabel74.setToolTipText("");
        TiendaOnlineTab.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 473, -1, -1));

        InputFiltroProveedor.setToolTipText("Introduce el usuario aqui");
        InputFiltroProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFiltroProveedor(evt);
            }
        });
        TiendaOnlineTab.add(InputFiltroProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 475, 191, -1));

        jLabel75.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel75.setText("Precio de:");
        jLabel75.setToolTipText("");
        TiendaOnlineTab.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 473, -1, -1));

        InputFiltroPrecio1.setToolTipText("Introduce el usuario aqui");
        InputFiltroPrecio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFiltroPrecio1ActionPerformed(evt);
            }
        });
        TiendaOnlineTab.add(InputFiltroPrecio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(453, 475, 176, -1));

        jLabel76.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel76.setText("Hasta");
        jLabel76.setToolTipText("");
        TiendaOnlineTab.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(635, 473, -1, -1));

        InputFiltroPrecio2.setToolTipText("Introduce el usuario aqui");
        InputFiltroPrecio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFiltroPrecio2ActionPerformed(evt);
            }
        });
        TiendaOnlineTab.add(InputFiltroPrecio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(686, 475, 176, -1));

        InputFiltroEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Disponibles", "No Disponibles", "Proximamente" }));
        InputFiltroEstado.setToolTipText("");
        TiendaOnlineTab.add(InputFiltroEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 515, -1, -1));

        BReiniciarFiltros.setBackground(new java.awt.Color(255, 51, 51));
        BReiniciarFiltros.setForeground(new java.awt.Color(255, 255, 255));
        BReiniciarFiltros.setText("Reiniciar");
        BReiniciarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BReiniciarFiltrosActionPerformed(evt);
            }
        });
        TiendaOnlineTab.add(BReiniciarFiltros, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 515, -1, -1));

        MainTabs.addTab("Tienda Online", TiendaOnlineTab);

        ProcesoPagoTab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound9.setBackground(new java.awt.Color(230, 230, 230));
        panelRound9.setRoundBottomLeft(15);
        panelRound9.setRoundBottomRight(15);
        panelRound9.setRoundTopLeft(15);
        panelRound9.setRoundTopRight(15);

        jLabel48.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(1, 1, 1));
        jLabel48.setText("ID Producto");
        jLabel48.setToolTipText("");

        panelRound10.setBackground(new java.awt.Color(200, 200, 200));
        panelRound10.setRoundBottomLeft(15);
        panelRound10.setRoundBottomRight(15);
        panelRound10.setRoundTopLeft(15);
        panelRound10.setRoundTopRight(15);

        IDProductoLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDProductoLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        IDProductoLabelPago.setText("Ninguno Seleccionado");
        IDProductoLabelPago.setToolTipText("");

        javax.swing.GroupLayout panelRound10Layout = new javax.swing.GroupLayout(panelRound10);
        panelRound10.setLayout(panelRound10Layout);
        panelRound10Layout.setHorizontalGroup(
            panelRound10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound10Layout.setVerticalGroup(
            panelRound10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelRound11.setBackground(new java.awt.Color(200, 200, 200));
        panelRound11.setRoundBottomLeft(15);
        panelRound11.setRoundBottomRight(15);
        panelRound11.setRoundTopLeft(15);
        panelRound11.setRoundTopRight(15);

        IDNombreProductoLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDNombreProductoLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        IDNombreProductoLabelPago.setText("Ninguno Seleccionado");
        IDNombreProductoLabelPago.setToolTipText("");

        javax.swing.GroupLayout panelRound11Layout = new javax.swing.GroupLayout(panelRound11);
        panelRound11.setLayout(panelRound11Layout);
        panelRound11Layout.setHorizontalGroup(
            panelRound11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDNombreProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound11Layout.setVerticalGroup(
            panelRound11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDNombreProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel65.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(1, 1, 1));
        jLabel65.setText("Nombre del Producto");
        jLabel65.setToolTipText("");

        jLabel67.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(1, 1, 1));
        jLabel67.setText("Costo");
        jLabel67.setToolTipText("");

        panelRound12.setBackground(new java.awt.Color(200, 200, 200));
        panelRound12.setRoundBottomLeft(15);
        panelRound12.setRoundBottomRight(15);
        panelRound12.setRoundTopLeft(15);
        panelRound12.setRoundTopRight(15);

        IDCostoProductoLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDCostoProductoLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        IDCostoProductoLabelPago.setText("Ninguno Seleccionado");
        IDCostoProductoLabelPago.setToolTipText("");

        javax.swing.GroupLayout panelRound12Layout = new javax.swing.GroupLayout(panelRound12);
        panelRound12.setLayout(panelRound12Layout);
        panelRound12Layout.setHorizontalGroup(
            panelRound12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDCostoProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound12Layout.setVerticalGroup(
            panelRound12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDCostoProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel69.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(1, 1, 1));
        jLabel69.setText("Marca");
        jLabel69.setToolTipText("");

        panelRound13.setBackground(new java.awt.Color(200, 200, 200));
        panelRound13.setRoundBottomLeft(15);
        panelRound13.setRoundBottomRight(15);
        panelRound13.setRoundTopLeft(15);
        panelRound13.setRoundTopRight(15);

        IDMarcaProductoLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDMarcaProductoLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        IDMarcaProductoLabelPago.setText("Ninguno Seleccionado");
        IDMarcaProductoLabelPago.setToolTipText("");

        javax.swing.GroupLayout panelRound13Layout = new javax.swing.GroupLayout(panelRound13);
        panelRound13.setLayout(panelRound13Layout);
        panelRound13Layout.setHorizontalGroup(
            panelRound13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDMarcaProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound13Layout.setVerticalGroup(
            panelRound13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDMarcaProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel71.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(1, 1, 1));
        jLabel71.setText("Proveedor");
        jLabel71.setToolTipText("");

        panelRound14.setBackground(new java.awt.Color(200, 200, 200));
        panelRound14.setRoundBottomLeft(15);
        panelRound14.setRoundBottomRight(15);
        panelRound14.setRoundTopLeft(15);
        panelRound14.setRoundTopRight(15);

        IDProveedorProductoLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        IDProveedorProductoLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        IDProveedorProductoLabelPago.setText("Ninguno Seleccionado");
        IDProveedorProductoLabelPago.setToolTipText("");

        javax.swing.GroupLayout panelRound14Layout = new javax.swing.GroupLayout(panelRound14);
        panelRound14.setLayout(panelRound14Layout);
        panelRound14Layout.setHorizontalGroup(
            panelRound14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProveedorProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound14Layout.setVerticalGroup(
            panelRound14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDProveedorProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel77.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(1, 1, 1));
        jLabel77.setText("Categoria de Peso");
        jLabel77.setToolTipText("");

        panelRound15.setBackground(new java.awt.Color(200, 200, 200));
        panelRound15.setRoundBottomLeft(15);
        panelRound15.setRoundBottomRight(15);
        panelRound15.setRoundTopLeft(15);
        panelRound15.setRoundTopRight(15);

        PesoProductoLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        PesoProductoLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        PesoProductoLabelPago.setText("Ninguno Seleccionado");
        PesoProductoLabelPago.setToolTipText("");

        javax.swing.GroupLayout panelRound15Layout = new javax.swing.GroupLayout(panelRound15);
        panelRound15.setLayout(panelRound15Layout);
        panelRound15Layout.setHorizontalGroup(
            panelRound15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PesoProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRound15Layout.setVerticalGroup(
            panelRound15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PesoProductoLabelPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelRound9Layout = new javax.swing.GroupLayout(panelRound9);
        panelRound9.setLayout(panelRound9Layout);
        panelRound9Layout.setHorizontalGroup(
            panelRound9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelRound10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelRound15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRound9Layout.createSequentialGroup()
                        .addGroup(panelRound9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel48)
                            .addComponent(jLabel65)
                            .addComponent(jLabel67)
                            .addComponent(jLabel69)
                            .addComponent(jLabel71))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelRound9Layout.setVerticalGroup(
            panelRound9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel65)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel67)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel71)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel77)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRound15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProcesoPagoTab.add(panelRound9, new org.netbeans.lib.awtextra.AbsoluteConstraints(752, 6, -1, -1));

        jLabel78.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel78.setText("Direccion");
        jLabel78.setToolTipText("");
        ProcesoPagoTab.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 11, -1, -1));

        InputDireccionPago.setToolTipText("Introduce el usuario aqui");
        InputDireccionPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputDireccionPago(evt);
            }
        });
        ProcesoPagoTab.add(InputDireccionPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 44, 280, -1));

        jLabel79.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel79.setText("Telefono");
        jLabel79.setToolTipText("");
        ProcesoPagoTab.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 92, -1, -1));

        InputTelefonoPago.setToolTipText("Introduce el usuario aqui");
        InputTelefonoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputTelefonoPago(evt);
            }
        });
        ProcesoPagoTab.add(InputTelefonoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 123, 740, -1));

        panelRound16.setBackground(new java.awt.Color(190, 190, 190));
        panelRound16.setRoundBottomLeft(10);
        panelRound16.setRoundBottomRight(10);
        panelRound16.setRoundTopLeft(10);
        panelRound16.setRoundTopRight(10);

        javax.swing.GroupLayout panelRound16Layout = new javax.swing.GroupLayout(panelRound16);
        panelRound16.setLayout(panelRound16Layout);
        panelRound16Layout.setHorizontalGroup(
            panelRound16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelRound16Layout.setVerticalGroup(
            panelRound16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        ProcesoPagoTab.add(panelRound16, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 76, 740, -1));

        panelRound17.setBackground(new java.awt.Color(190, 190, 190));
        panelRound17.setRoundBottomLeft(10);
        panelRound17.setRoundBottomRight(10);
        panelRound17.setRoundTopLeft(10);
        panelRound17.setRoundTopRight(10);

        javax.swing.GroupLayout panelRound17Layout = new javax.swing.GroupLayout(panelRound17);
        panelRound17.setLayout(panelRound17Layout);
        panelRound17Layout.setHorizontalGroup(
            panelRound17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelRound17Layout.setVerticalGroup(
            panelRound17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        ProcesoPagoTab.add(panelRound17, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 161, 740, -1));

        jLabel80.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel80.setText("Email");
        jLabel80.setToolTipText("");
        ProcesoPagoTab.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 177, -1, -1));

        InputEmailPago.setToolTipText("Introduce el usuario aqui");
        InputEmailPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputEmailPago(evt);
            }
        });
        ProcesoPagoTab.add(InputEmailPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 208, 740, -1));

        panelRound18.setBackground(new java.awt.Color(190, 190, 190));
        panelRound18.setRoundBottomLeft(10);
        panelRound18.setRoundBottomRight(10);
        panelRound18.setRoundTopLeft(10);
        panelRound18.setRoundTopRight(10);

        javax.swing.GroupLayout panelRound18Layout = new javax.swing.GroupLayout(panelRound18);
        panelRound18.setLayout(panelRound18Layout);
        panelRound18Layout.setHorizontalGroup(
            panelRound18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelRound18Layout.setVerticalGroup(
            panelRound18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        ProcesoPagoTab.add(panelRound18, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 246, 740, -1));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel31.setText("Tipo de Entrega");
        jLabel31.setToolTipText("");
        ProcesoPagoTab.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 479, -1, -1));

        InputEntregaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Urgente" }));
        InputEntregaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputEntregaPagoActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(InputEntregaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 511, 240, -1));

        InputDestinoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Barranquilla", "Bogotá", "Medellín", "Cali", "Cartagena", "Cúcuta", "Bucaramanga", "Pereira", "Santa Marta", "Manizales", "Armenia", "Pasto", "Ibagué", "Villavicencio", "Neiva", "Popayán", "Sincelejo", "Montería", "Riohacha", "Tunja", "Valledupar" }));
        InputDestinoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputDestinoPagoActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(InputDestinoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 44, 180, -1));

        jLabel45.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel45.setText("Metodo Pago");
        jLabel45.setToolTipText("");
        ProcesoPagoTab.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 268, -1, -1));

        InputMetodoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Tarjeta de Crédito", "Tarjeta de Débito", "Transferencia Bancaria", "Efectivo", "Pago por PSE", "Tarjeta de Regalo" }));
        InputMetodoPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputMetodoPagoActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(InputMetodoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 299, 240, -1));

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel43.setText("Entidad Emisora");
        jLabel43.setToolTipText("");
        ProcesoPagoTab.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 268, -1, -1));

        InputEntidadEmisoraPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Bancolombia", "Banco Davivienda", "Banco de Bogotá", "Banco de Occidente", "Banco Popular", "Banco AV Villas", "Banco BBVA Colombia", "Banco Itaú", "Banco GNB Sudameris", "Scotiabank Colpatria", "Banco Agrario de Colombia", "Banco Caja Social", "Banco Falabella", "Banco Serfinanza", "Plataforma Virtual", "Efecty (Efectivo)" }));
        ProcesoPagoTab.add(InputEntidadEmisoraPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 299, 240, -1));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel46.setText("Plataforma");
        jLabel46.setToolTipText("");
        ProcesoPagoTab.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 268, -1, -1));

        InputPlataformaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Bancolombia", "Nequi (Bancolombia)", "Daviplata (Davivienda)", "PayPal", "PayU", "Mercado Pago", "Wompi (Bancolombia)", "Movii", "Tpaga", "Powwi", "Dale!", "RappiPay", "Payválida", "Efecty (Efectivo)", "SuRed", "Baloto", "Puntored", "Plataforma Virtual" }));
        ProcesoPagoTab.add(InputPlataformaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 299, 240, -1));

        BValidarPago.setBackground(new java.awt.Color(0, 204, 51));
        BValidarPago.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        BValidarPago.setForeground(new java.awt.Color(255, 255, 255));
        BValidarPago.setText("Realizar Pedido");
        BValidarPago.setToolTipText("");
        BValidarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BValidarPagoActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(BValidarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(855, 462, 220, 80));

        panelRound19.setBackground(new java.awt.Color(220, 220, 220));
        panelRound19.setRoundBottomLeft(15);
        panelRound19.setRoundBottomRight(15);
        panelRound19.setRoundTopLeft(15);
        panelRound19.setRoundTopRight(15);

        jLabel49.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(1, 1, 1));
        jLabel49.setText("Monto Total");
        jLabel49.setToolTipText("");

        jLabel50.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(1, 1, 1));
        jLabel50.setText("Destino Seleccionado:");
        jLabel50.setToolTipText("");

        DestinoPagoMostrarLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        DestinoPagoMostrarLabel.setForeground(new java.awt.Color(10, 10, 10));
        DestinoPagoMostrarLabel.setText("Barranquilla");
        DestinoPagoMostrarLabel.setToolTipText("");

        jLabel51.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(1, 1, 1));
        jLabel51.setText("Tipo de Entrega:");
        jLabel51.setToolTipText("");

        TipoEntregaLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TipoEntregaLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        TipoEntregaLabelPago.setText("Normal");
        TipoEntregaLabelPago.setToolTipText("");

        MontoTotalPagoLabel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        MontoTotalPagoLabel.setForeground(new java.awt.Color(255, 51, 51));
        MontoTotalPagoLabel.setText("Selecciona un Destino");
        MontoTotalPagoLabel.setToolTipText("");

        jLabel52.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(1, 1, 1));
        jLabel52.setText("Terminal Origen");
        jLabel52.setToolTipText("");

        TerminalOrigenLabelPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TerminalOrigenLabelPago.setForeground(new java.awt.Color(10, 10, 10));
        TerminalOrigenLabelPago.setText("Bogota");
        TerminalOrigenLabelPago.setToolTipText("");

        CostoEnvioPagoLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CostoEnvioPagoLabel.setForeground(new java.awt.Color(255, 51, 51));
        CostoEnvioPagoLabel.setText("Normal");
        CostoEnvioPagoLabel.setToolTipText("");

        jLabel53.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(1, 1, 1));
        jLabel53.setText("Costo de Envio");
        jLabel53.setToolTipText("");

        javax.swing.GroupLayout panelRound19Layout = new javax.swing.GroupLayout(panelRound19);
        panelRound19.setLayout(panelRound19Layout);
        panelRound19Layout.setHorizontalGroup(
            panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound19Layout.createSequentialGroup()
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DestinoPagoMostrarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelRound19Layout.createSequentialGroup()
                        .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelRound19Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MontoTotalPagoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRound19Layout.createSequentialGroup()
                                .addComponent(jLabel51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TipoEntregaLabelPago, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRound19Layout.createSequentialGroup()
                                .addComponent(jLabel53)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CostoEnvioPagoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelRound19Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TerminalOrigenLabelPago, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)))))
                .addContainerGap())
        );
        panelRound19Layout.setVerticalGroup(
            panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(DestinoPagoMostrarLabel))
                .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound19Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel51)
                            .addComponent(TipoEntregaLabelPago))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound19Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(TerminalOrigenLabelPago))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel53)
                        .addComponent(CostoEnvioPagoLabel))
                    .addGroup(panelRound19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel49)
                        .addComponent(MontoTotalPagoLabel)))
                .addContainerGap())
        );

        ProcesoPagoTab.add(panelRound19, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 343, 740, -1));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel32.setText("Simular Pago");
        jLabel32.setToolTipText("");
        ProcesoPagoTab.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 479, -1, -1));

        InputSimulacionPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendiente", "Fallido" }));
        ProcesoPagoTab.add(InputSimulacionPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 511, 240, -1));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel33.setText("Fondos");
        jLabel33.setToolTipText("");
        ProcesoPagoTab.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 479, -1, -1));

        jLabel81.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel81.setText("Terminal");
        jLabel81.setToolTipText("");
        ProcesoPagoTab.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 42, -1, -1));

        InputTerminalPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bogota", "Cundinamarca", "Medellin", "Cartagena" }));
        InputTerminalPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputTerminalPagoActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(InputTerminalPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 44, 180, -1));

        BRegresarTienda.setBackground(new java.awt.Color(255, 51, 51));
        BRegresarTienda.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BRegresarTienda.setForeground(new java.awt.Color(255, 255, 255));
        BRegresarTienda.setText("Regresar");
        BRegresarTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRegresarTiendaActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(BRegresarTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 479, 97, 63));
        ProcesoPagoTab.add(FondosPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 511, 240, -1));

        BAplicarFondos.setText("Aplicar Fondos");
        BAplicarFondos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAplicarFondosActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(BAplicarFondos, new org.netbeans.lib.awtextra.AbsoluteConstraints(673, 474, 176, -1));

        BConfirmarDireccion.setText("Confirmar");
        BConfirmarDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConfirmarDireccionActionPerformed(evt);
            }
        });
        ProcesoPagoTab.add(BConfirmarDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 190, -1));

        MainTabs.addTab("Proceso Pago", ProcesoPagoTab);

        BMarcarNotificacionLeido.setBackground(new java.awt.Color(0, 204, 51));
        BMarcarNotificacionLeido.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        BMarcarNotificacionLeido.setForeground(new java.awt.Color(255, 255, 255));
        BMarcarNotificacionLeido.setText("Marcar como Leido");
        BMarcarNotificacionLeido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BMarcarNotificacionLeidoActionPerformed(evt);
            }
        });

        BEliminarNotificacion.setBackground(new java.awt.Color(255, 51, 51));
        BEliminarNotificacion.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        BEliminarNotificacion.setForeground(new java.awt.Color(255, 255, 255));
        BEliminarNotificacion.setText("Eliminar");
        BEliminarNotificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEliminarNotificacionActionPerformed(evt);
            }
        });

        NotificacionesUsuarioTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Notificación", "Fecha y Hora", "Asunto", "Mensaje", "Estado", "Prioridad"
            }
        ));
        jScrollPane4.setViewportView(NotificacionesUsuarioTabla);

        javax.swing.GroupLayout NotificacionesTabLayout = new javax.swing.GroupLayout(NotificacionesTab);
        NotificacionesTab.setLayout(NotificacionesTabLayout);
        NotificacionesTabLayout.setHorizontalGroup(
            NotificacionesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NotificacionesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NotificacionesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1081, Short.MAX_VALUE)
                    .addGroup(NotificacionesTabLayout.createSequentialGroup()
                        .addComponent(BMarcarNotificacionLeido, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BEliminarNotificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        NotificacionesTabLayout.setVerticalGroup(
            NotificacionesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NotificacionesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NotificacionesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BMarcarNotificacionLeido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BEliminarNotificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        MainTabs.addTab("Notificaciones", NotificacionesTab);

        HistorialPedidosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID de Orden", "Código de Tracking", "Fecha de Creación", "Fecha Estimada de Entrega", "Origen", "Destino", "Dirección de Entrega", "Estado del Pedido", "Tipo de Entrega", "Costo de Envío"
            }
        ));
        jScrollPane2.setViewportView(HistorialPedidosTable);

        javax.swing.GroupLayout HistorialPedidosTabLayout = new javax.swing.GroupLayout(HistorialPedidosTab);
        HistorialPedidosTab.setLayout(HistorialPedidosTabLayout);
        HistorialPedidosTabLayout.setHorizontalGroup(
            HistorialPedidosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialPedidosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1081, Short.MAX_VALUE)
                .addContainerGap())
        );
        HistorialPedidosTabLayout.setVerticalGroup(
            HistorialPedidosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialPedidosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );

        MainTabs.addTab("Historial Pedidos", HistorialPedidosTab);

        PaymentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo Pago", "ID Orden", "ID Cliente", "Fecha Pago", "Monto Total", "Concepto de Pago", "Metodo Pago", "Entidad Emisora", "Plataforma", "Estado de Pago"
            }
        ));
        jScrollPane3.setViewportView(PaymentsTable);

        javax.swing.GroupLayout HistorialPagosTabLayout = new javax.swing.GroupLayout(HistorialPagosTab);
        HistorialPagosTab.setLayout(HistorialPagosTabLayout);
        HistorialPagosTabLayout.setHorizontalGroup(
            HistorialPagosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialPagosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1081, Short.MAX_VALUE)
                .addContainerGap())
        );
        HistorialPagosTabLayout.setVerticalGroup(
            HistorialPagosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistorialPagosTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );

        MainTabs.addTab("Historial Pagos", HistorialPagosTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainAppSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainTabs)
                    .addComponent(MainAppSelector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BInicioMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BInicioMainActionPerformed
        MainTabs.setSelectedIndex(0);
        cargarNotificacionesATabla();
        cargarTotalesInicioUsuario(userID);
    }//GEN-LAST:event_BInicioMainActionPerformed

    private void BTiendaOnlinerMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTiendaOnlinerMainActionPerformed
        MainTabs.setSelectedIndex(1);
    }//GEN-LAST:event_BTiendaOnlinerMainActionPerformed

    private void BHistorialPedidosMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BHistorialPedidosMainActionPerformed
        MainTabs.setSelectedIndex(4);
        cargarHistorialPedidosUsuario();
    }//GEN-LAST:event_BHistorialPedidosMainActionPerformed

    private void BHistorialPagosMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BHistorialPagosMainActionPerformed
        MainTabs.setSelectedIndex(5);
        cargarPagosPorUsuario();

    }//GEN-LAST:event_BHistorialPagosMainActionPerformed

    private void ProductsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductsTableMouseClicked
        cargarDatosProductoSeleccionado();
    }//GEN-LAST:event_ProductsTableMouseClicked

    private void InputFiltroProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFiltroProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFiltroProductoActionPerformed

    private void BFiltrarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BFiltrarProductosActionPerformed
        filtrarYCargarProductos();
    }//GEN-LAST:event_BFiltrarProductosActionPerformed

    private void BProcesoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BProcesoPagoActionPerformed
        procesarPagoProducto();
    }//GEN-LAST:event_BProcesoPagoActionPerformed

    private void InputFiltroMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFiltroMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFiltroMarcaActionPerformed

    private void InputFiltroProveedor(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFiltroProveedor
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFiltroProveedor

    private void InputFiltroPrecio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFiltroPrecio1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFiltroPrecio1ActionPerformed

    private void InputFiltroPrecio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFiltroPrecio2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputFiltroPrecio2ActionPerformed

    private void BReiniciarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BReiniciarFiltrosActionPerformed
        limpiarCampos();
        cargarProductosParaTienda();
    }//GEN-LAST:event_BReiniciarFiltrosActionPerformed

    private void BCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCerrarSesionActionPerformed
        AllayNexoLogin allay = new AllayNexoLogin();
        allay.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BCerrarSesionActionPerformed

    private void InputTelefonoPago(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputTelefonoPago
        // TODO add your handling code here:
    }//GEN-LAST:event_InputTelefonoPago

    private void InputEmailPago(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputEmailPago
        // TODO add your handling code here:
    }//GEN-LAST:event_InputEmailPago

    private void InputDireccionPago(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputDireccionPago
        actualizarCostosEnvioYTotal();
    }//GEN-LAST:event_InputDireccionPago

    private void BValidarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BValidarPagoActionPerformed
        procesarSimulacionPagoUsuario();
    }//GEN-LAST:event_BValidarPagoActionPerformed

    private void BRegresarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRegresarTiendaActionPerformed
        MainTabs.setSelectedIndex(1);
        restablecerFormularioPagoUsuario();
    }//GEN-LAST:event_BRegresarTiendaActionPerformed

    private void InputDestinoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputDestinoPagoActionPerformed
        actualizarCostosEnvioYTotal();
    }//GEN-LAST:event_InputDestinoPagoActionPerformed

    private void InputTerminalPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputTerminalPagoActionPerformed
        actualizarCostosEnvioYTotal();
    }//GEN-LAST:event_InputTerminalPagoActionPerformed

    private void InputEntregaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputEntregaPagoActionPerformed
        actualizarCostosEnvioYTotal();
    }//GEN-LAST:event_InputEntregaPagoActionPerformed

    private void InputMetodoPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputMetodoPagoActionPerformed
        String metodoPago = (String) InputMetodoPago.getSelectedItem();

        switch (metodoPago) {
            case "Efectivo":
                InputEntidadEmisoraPago.setModel(new DefaultComboBoxModel<>(new String[]{"Efecty (Efectivo)"}));
                InputPlataformaPago.setModel(new DefaultComboBoxModel<>(new String[]{"Efecty (Efectivo)"}));
                InputEntidadEmisoraPago.setEnabled(false);
                InputPlataformaPago.setEnabled(false);
                break;
            case "Tarjeta de Regalo":
                InputEntidadEmisoraPago.setModel(new DefaultComboBoxModel<>(new String[]{"Plataforma Virtual"}));
                InputPlataformaPago.setModel(new DefaultComboBoxModel<>(new String[]{"Plataforma Virtual"}));
                InputEntidadEmisoraPago.setEnabled(false);
                InputPlataformaPago.setEnabled(false);
                break;
            default:
                InputEntidadEmisoraPago.setModel(new DefaultComboBoxModel<>(new String[]{
                    "Ninguno", "Bancolombia", "Banco Davivienda", "Banco de Bogotá", "Banco de Occidente",
                    "Banco Popular", "Banco AV Villas", "Banco BBVA Colombia", "Banco Itaú", "Banco GNB Sudameris",
                    "Scotiabank", "Colpatria", "Banco Agrario de Colombia", "Banco Caja Social", "Banco Falabella",
                    "Banco Serfinanza", "Plataforma Virtual", "Efecty (Efectivo)"
                }));
                InputPlataformaPago.setModel(new DefaultComboBoxModel<>(new String[]{
                    "Ninguno", "Bancolombia", "Nequi (Bancolombia)", "Daviplata (Davivienda)", "PayPal",
                    "PayU", "Mercado Pago", "Wompi (Bancolombia)", "Movii", "Tpaga", "Powwi",
                    "Dale!", "RappiPay", "Payválida", "Efecty (Efectivo)", "SuRed", "Baloto", "Puntored",
                    "Plataforma Virtual"
                }));
                InputEntidadEmisoraPago.setEnabled(true);
                InputPlataformaPago.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_InputMetodoPagoActionPerformed

    private void BAplicarFondosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAplicarFondosActionPerformed
        String textoFondos = FondosPago.getText().trim();
        String textoMontoOriginal = MontoTotalPagoLabel.getText().replace("$", "").replace("COP", "").trim();

        double montoOriginal;
        try {
            montoOriginal = Double.parseDouble(textoMontoOriginal.replace(".", "").replace(",", "."));
        } catch (NumberFormatException ex) {
            montoOriginal = 0;
        }

        double saldoUsuario = obtenerBalanceUsuario(userID);

        if (BAplicarFondos.getText().equals("Aplicar Fondos")) {
            try {
                double fondosUsados = 0;
                if (!textoFondos.isEmpty()) {
                    fondosUsados = Double.parseDouble(textoFondos);
                }

                if (fondosUsados > saldoUsuario) {
                    JOptionPane.showMessageDialog(null, "Fondos insuficientes. Su saldo disponible es: " + saldoUsuario);
                } else {
                    if (validarCampos()) {
                        if (fondosUsados >= montoOriginal) {
                            fondosUsados = montoOriginal;
                            FondosPago.setText(String.valueOf(fondosUsados));
                            MontoTotalPagoLabel.setText("$0 COP");
                        } else {
                            double nuevoMonto = montoOriginal - fondosUsados;
                            MontoTotalPagoLabel.setText(formatearValorCOP(nuevoMonto));
                        }

                        deshabilitarComponentes();

                        balanceDescontado = String.valueOf(fondosUsados);

                        BAplicarFondos.setText("Pago Normal");
                    } else {
                        JOptionPane.showMessageDialog(null, "Por favor complete correctamente todos los campos.");
                    }
                }

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Por favor ingrese un monto válido.");
            }

        } else {
            MontoTotalPagoLabel.setText(montoOriginalPago);
            BAplicarFondos.setText("Aplicar Fondos");
            habilitarComponentes();
            FondosPago.setText("");
        }

    }//GEN-LAST:event_BAplicarFondosActionPerformed

    private void BConfirmarDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConfirmarDireccionActionPerformed
        String ciudad = InputDestinoPago.getSelectedItem().toString().trim();
        String direccion = InputDireccionPago.getText().trim();

        if (!ciudad.equalsIgnoreCase("Ninguno") && !direccion.isEmpty()) {
            String destinoCompleto = ciudad + ", " + direccion;
            DestinoPagoMostrarLabel.setText(destinoCompleto);
            direccionConfirmada = true;
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una ciudad válida y escriba una dirección.");
        }
    }//GEN-LAST:event_BConfirmarDireccionActionPerformed

    private void BNotificacionesMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BNotificacionesMainActionPerformed
        MainTabs.setSelectedIndex(3);
        cargarNotificacionesATabla();
    }//GEN-LAST:event_BNotificacionesMainActionPerformed

    private void BMarcarNotificacionLeidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BMarcarNotificacionLeidoActionPerformed
        marcarNotificacionComoLeida();
    }//GEN-LAST:event_BMarcarNotificacionLeidoActionPerformed

    private void BEliminarNotificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEliminarNotificacionActionPerformed
        eliminarNotificacion();
    }//GEN-LAST:event_BEliminarNotificacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllayNexoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllayNexoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllayNexoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllayNexoUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllayNexoUser().setVisible(true);
            }
        });
    }

    public void setUserID(String newUserID) {
        this.userID = newUserID;
        cargarTotalesInicioUsuario(userID);
    }
    
    private void setCenteredZoomedIcon(JLabel label, String imagePath, int zoomPercent) {
        try {
            ImageIcon originalIcon = new ImageIcon(getClass().getResource(imagePath));
            Image originalImage = originalIcon.getImage();

            int originalWidth = originalIcon.getIconWidth();
            int originalHeight = originalIcon.getIconHeight();

            zoomPercent = Math.max(1, Math.min(zoomPercent, 100));

            double scaleFactor = zoomPercent / 100.0;
            int cropSize = (int) (Math.min(originalWidth, originalHeight) * scaleFactor);

            int cropX = (originalWidth - cropSize) / 2;
            int cropY = (originalHeight - cropSize) / 2;

            BufferedImage croppedImage = new BufferedImage(cropSize, cropSize, BufferedImage.TYPE_INT_ARGB);
            Graphics2D g = croppedImage.createGraphics();
            g.drawImage(originalImage, 0, 0, cropSize, cropSize, cropX, cropY, cropX + cropSize, cropY + cropSize, null);
            g.dispose();

            int targetWidth = label.getWidth() > 0 ? label.getWidth() : label.getPreferredSize().width;
            int targetHeight = label.getHeight() > 0 ? label.getHeight() : label.getPreferredSize().height;

            Image scaledImage = croppedImage.getScaledInstance(targetWidth, targetHeight, Image.SCALE_SMOOTH);
            label.setIcon(new ImageIcon(scaledImage));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void initializeImages() {
        setCenteredZoomedIcon(AllayNexoIcon, "/UISources/AllayNexo.png", 100);
        setCenteredZoomedIcon(InicioIcon, "/UISources/Home.png", 100);
        setCenteredZoomedIcon(TiendaIcon, "/UISources/Products.png", 100);
        setCenteredZoomedIcon(NotificacionesIcon, "/UISources/Notifications.png", 100);
        setCenteredZoomedIcon(HistorialPedidosIcon, "/UISources/Orders.png", 100);
        setCenteredZoomedIcon(HistorialPagosIcon, "/UISources/Payments.png", 100);
        setCenteredZoomedIcon(TotalPedidosIconX, "/UISources/Delivery.png", 100);
        setCenteredZoomedIcon(TotalBalanceIconX, "/UISources/Money.png", 100);
        setCenteredZoomedIcon(TotalNotificacionesIconX, "/UISources/Notifications.png", 100);
    }

    private void initializeApp() {
        MainTabs.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);
        MainTabs.setUI(new javax.swing.plaf.basic.BasicTabbedPaneUI() {
            @Override
            protected int calculateTabAreaHeight(int tabPlacement, int runCount, int maxTabHeight) {
                return 0;
            }

            @Override
            protected void paintTabArea(Graphics g, int tabPlacement, int selectedIndex) {
                // Ocultar la barra de tabs
            }
        });
    }

    private void configurarTablaNoEditable(JTable tabla) {
        tabla.setDefaultEditor(Object.class, null);
    }

    private void cargarNotificacionesATabla() {
        DefaultTableModel modelo = (DefaultTableModel) NotificacionesUsuarioTabla.getModel();
        modelo.setRowCount(0);

        File archivoNotificaciones = new File("notificaciones.txt");

        if (!archivoNotificaciones.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo de notificaciones no existe.");
            return;
        }

        if (archivoNotificaciones.length() == 0) {
            JOptionPane.showMessageDialog(this, "No hay notificaciones disponibles.");
            return;
        }

        int contadorNoLeidas = 0;
        boolean hayNotificaciones = false;

        try (BufferedReader reader = new BufferedReader(new FileReader(archivoNotificaciones))) {
            String linea;

            while ((linea = reader.readLine()) != null) {
                String[] datos = linea.split(",");

                if (datos.length >= 8) {
                    String idNotificacion = datos[0];
                    String idCliente = datos[1];
                    String fecha = datos[2];
                    String hora = datos[3];
                    String asunto = datos[4];
                    String mensaje = datos[5];
                    String estado = datos[6];
                    String prioridad = datos[7];

                    if (idCliente.equals(userID)) {
                        modelo.addRow(new Object[]{idNotificacion, fecha + " " + hora, asunto, mensaje, estado, prioridad});
                        hayNotificaciones = true;

                        if (estado.equalsIgnoreCase("No Leído")) {
                            contadorNoLeidas++;
                        }
                    }
                }
            }

            InicioNotificacionesSinLeerLabel.setText(String.valueOf(contadorNoLeidas));

            if (!hayNotificaciones) {
                JOptionPane.showMessageDialog(this, "No hay notificaciones para mostrar.");
            }

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar las notificaciones.");
        }

        configurarTablaNoEditable(NotificacionesUsuarioTabla);
    }

    public void procesarPagoProducto() {
        int filaSeleccionada = ProductsTable.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto para procesar el pago.");
            return;
        }

        String idProducto = IDProductoLabel.getText().trim();
        if (idProducto.isEmpty()) {
            JOptionPane.showMessageDialog(null, "El producto seleccionado no tiene un ID válido.");
            return;
        }

        try {
            BufferedReader br = new BufferedReader(new FileReader("productos.txt"));
            String linea;

            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");
                if (datos.length >= 12 && datos[0].equals(idProducto)) {
                    MainTabs.setSelectedIndex(2);

                    IDProductoLabelPago.setText(datos[0]);     // ID Producto
                    IDNombreProductoLabelPago.setText(datos[1]); // Nombre Producto
                    IDCostoProductoLabelPago.setText(formatearValorCOP(Double.parseDouble(datos[2]))); //Costo COP (se formateo jajajajajajsajasjkas)
                    IDMarcaProductoLabelPago.setText(datos[4]);  // Marca
                    IDProveedorProductoLabelPago.setText(datos[6]); // Proveedor
                    PesoProductoLabelPago.setText(datos[11]);    // Tipo de peso (Ligero, etc.)

                    br.close();
                    return;
                }
            }

            br.close();
            JOptionPane.showMessageDialog(null, "No se encontró el producto con ID: " + idProducto);

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al leer el archivo de productos: " + e.getMessage());
        }
    }

    private void marcarNotificacionComoLeida() {
        int filaSeleccionada = NotificacionesUsuarioTabla.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una notificación para marcar como leída.");
            return;
        }

        String idNotificacion = NotificacionesUsuarioTabla.getValueAt(filaSeleccionada, 0).toString();

        File archivo = new File("notificaciones.txt");
        StringBuilder contenidoArchivo = new StringBuilder();
        boolean notificacionEncontrada = false;

        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",", -1);

                if (datos.length > 0 && datos[0].equals(idNotificacion)) {
                    if (datos[6].equals("No Leído")) {
                        datos[6] = "Leído";
                        notificacionEncontrada = true;
                    }
                }

                contenidoArchivo.append(String.join(",", datos)).append("\n");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al leer el archivo de notificaciones: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (!notificacionEncontrada) {
            JOptionPane.showMessageDialog(this, "No se encontró la notificación seleccionada o ya está marcada como leída.");
            return;
        }

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(archivo))) {
            bw.write(contenidoArchivo.toString());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar la notificación actualizada: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        cargarNotificacionesATabla();
        JOptionPane.showMessageDialog(this, "Notificación marcada como leída.");
    }

    public void restablecerFormularioPagoUsuario() {
        balanceDescontado = "0";
        montoOriginalPago = "";
        direccionConfirmada = false;

        InputEmailPago.setText("");
        InputTelefonoPago.setText("");
        InputDireccionPago.setText("");
        FondosPago.setText("");

        BAplicarFondos.setText("Aplicar Fondos");

        IDProductoLabelPago.setText("ID");
        PesoProductoLabelPago.setText("Peso");

        InputMetodoPago.setSelectedIndex(0);
        InputDestinoPago.setSelectedIndex(0);

        InputEntidadEmisoraPago.setModel(new DefaultComboBoxModel<>(new String[]{
            "Ninguno", "Bancolombia", "Banco Davivienda", "Banco de Bogotá", "Banco de Occidente",
            "Banco Popular", "Banco AV Villas", "Banco BBVA Colombia", "Banco Itaú", "Banco GNB Sudameris",
            "Scotiabank", "Colpatria", "Banco Agrario de Colombia", "Banco Caja Social", "Banco Falabella",
            "Banco Serfinanza", "Plataforma Virtual", "Efecty (Efectivo)"
        }));
        InputEntidadEmisoraPago.setSelectedIndex(0);
        InputEntidadEmisoraPago.setEnabled(true);

        InputPlataformaPago.setModel(new DefaultComboBoxModel<>(new String[]{
            "Ninguno", "Bancolombia", "Nequi (Bancolombia)", "Daviplata (Davivienda)", "PayPal",
            "PayU", "Mercado Pago", "Wompi (Bancolombia)", "Movii", "Tpaga", "Powwi",
            "Dale!", "RappiPay", "Payválida", "Efecty (Efectivo)", "SuRed", "Baloto", "Puntored",
            "Plataforma Virtual"
        }));
        InputPlataformaPago.setSelectedIndex(0);
        InputPlataformaPago.setEnabled(true);

        InputEntregaPago.setSelectedIndex(0);

        InputEntidadEmisoraPago.setEnabled(true);
        InputPlataformaPago.setEnabled(true);

        CostoEnvioPagoLabel.setText("Normal");
        MontoTotalPagoLabel.setText("Selecciona un Destino");
        
        habilitarComponentes();
    }

    private String formatearValorCOP(double valor) {
        DecimalFormatSymbols symbols = new DecimalFormatSymbols();
        symbols.setGroupingSeparator('.');
        DecimalFormat formato = new DecimalFormat("$ ###,### COP", symbols);
        return formato.format(valor);
    }

    private boolean validarCampos() {
        return !FondosPago.getText().trim().isEmpty()
                && !MontoTotalPagoLabel.getText().trim().isEmpty()
                && !InputDireccionPago.getText().trim().isEmpty()
                && !InputTelefonoPago.getText().trim().isEmpty()
                && !InputEmailPago.getText().trim().isEmpty()
                && !InputMetodoPago.getSelectedItem().toString().equalsIgnoreCase("Ninguno")
                && !InputEntidadEmisoraPago.getSelectedItem().toString().equalsIgnoreCase("Ninguno")
                && !InputPlataformaPago.getSelectedItem().toString().equalsIgnoreCase("Ninguno")
                && !InputDestinoPago.getSelectedItem().toString().equalsIgnoreCase("Ninguno");
    }

    private void deshabilitarComponentes() {
        BConfirmarDireccion.setEnabled(false);
        InputEntregaPago.setEnabled(false);
        InputDestinoPago.setEnabled(false);
        InputTerminalPago.setEnabled(false);
        InputDireccionPago.setEnabled(false);
        InputTelefonoPago.setEnabled(false);
        InputEmailPago.setEnabled(false);
    }

    private void habilitarComponentes() {
        BConfirmarDireccion.setEnabled(true);
        InputEntregaPago.setEnabled(true);
        InputDestinoPago.setEnabled(true);
        InputTerminalPago.setEnabled(true);
        InputDireccionPago.setEnabled(true);
        InputTelefonoPago.setEnabled(true);
        InputEmailPago.setEnabled(true);
    }

    public void cargarPagosPorUsuario() {
        DefaultTableModel model = (DefaultTableModel) PaymentsTable.getModel();
        model.setRowCount(0);

        File archivo = new File("pagos.txt");
        if (!archivo.exists()) {
            JOptionPane.showMessageDialog(null, "No se encontró el archivo de pagos.");
            return;
        }

        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea;
            boolean hayPagos = false;

            while ((linea = br.readLine()) != null) {
                String[] partes = linea.split(",");
                if (partes.length >= 10) {
                    String idCliente = partes[2].trim();
                    if (idCliente.equals(userID)) {
                        model.addRow(new Object[]{
                            partes[0], // Codigo Pago
                            partes[1], // ID Orden
                            partes[2], // ID Cliente
                            partes[3], // Fecha Pago
                            partes[4], // Monto Total
                            partes[5], // Concepto de Pago
                            partes[6], // Método Pago
                            partes[7], // Entidad Emisora
                            partes[8], // Plataforma
                            partes[9] // Estado de Pago
                        });
                        hayPagos = true;
                    }
                }
            }

            if (!hayPagos) {
                JOptionPane.showMessageDialog(null, "No se encontraron pagos para el usuario.");
            }

        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al cargar historial de pagos.");
        }

        configurarTablaNoEditable(PaymentsTable);
    }

    private void cargarProductosParaTienda() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{
            "ID Producto", "Nombre Producto", "Costo", "Marca Producto", "Proveedor", "Stock"
        });

        File archivo = new File("productos.txt");

        if (!archivo.exists()) {
            JOptionPane.showMessageDialog(null, "El archivo de productos no existe. No se puede cargar la lista de productos.");
            return;
        }

        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");
                if (datos.length >= 9 && datos[10].equalsIgnoreCase("Habilitado")) {
                    String id = datos[0];
                    String nombre = datos[1];
                    String costo = datos[2];
                    String marca = datos[4];
                    String proveedor = datos[6];
                    String stock = datos[8];
                    model.addRow(new String[]{id, nombre, costo, marca, proveedor, stock});
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al leer el archivo de productos.");
        }

        ProductsTable.setModel(model);

        configurarTablaNoEditable(ProductsTable);
    }

    private void limpiarCampos() {
        InputFiltroProveedor.setText("");
        InputFiltroProducto.setText("");
        InputFiltroMarca.setText("");
        InputFiltroPrecio1.setText("");
        InputFiltroPrecio2.setText("");

        InputFiltroEstado.setSelectedIndex(0);
    }

    private void cargarTotalesInicioUsuario(String IDUsuario) {
        int totalPedidos = 0;
        double balance = 0.0;
        String userID = null;
        String nombreUsuario = null;

        File archivoUsuarios = new File("usuarios.txt");
        if (archivoUsuarios.exists()) {
            try (BufferedReader br = new BufferedReader(new FileReader(archivoUsuarios))) {
                String linea;
                while ((linea = br.readLine()) != null) {
                    String[] datos = linea.split(",");
                    if (datos.length >= 11) {
                        String id = datos[0];
                        if (id.equalsIgnoreCase(IDUsuario)) {
                            userID = datos[0];
                            balance = Double.parseDouble(datos[10]);
                            nombreUsuario = datos[1];
                            break;
                        }
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al leer el archivo de usuarios.");
                return;
            }
        }

        if (userID == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el usuario con id: " + IDUsuario);
            return;
        }

        File archivoOrdenes = new File("ordenes.txt");
        if (archivoOrdenes.exists()) {
            try (BufferedReader br = new BufferedReader(new FileReader(archivoOrdenes))) {
                String linea;
                while ((linea = br.readLine()) != null) {
                    String[] datos = linea.split(",");
                    if (datos.length >= 5) {
                        String idCliente = datos[4];
                        if (idCliente.equals(userID)) {
                            totalPedidos++;
                        }
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al leer el archivo de órdenes.");
            }
        }

        InicioTotalPedidosLabel.setText(String.valueOf(totalPedidos));
        InicioBalanceUsuarioLabel.setText(String.format("$%,.0f", balance));

        // Establecer el texto de la etiqueta con el nombre del usuario
        if (nombreUsuario != null) {
            UserNameLabelMain.setText("Bienvenido(a), " + nombreUsuario);
        }
    }

    private void eliminarNotificacion() {
        int filaSeleccionada = NotificacionesUsuarioTabla.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una notificación para eliminar.");
            return;
        }

        String idNotificacion = NotificacionesUsuarioTabla.getValueAt(filaSeleccionada, 0).toString();

        File archivo = new File("notificaciones.txt");
        StringBuilder contenidoArchivo = new StringBuilder();
        boolean notificacionEliminada = false;

        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",", -1);

                if (datos.length > 0 && !datos[0].equals(idNotificacion)) {
                    contenidoArchivo.append(linea).append("\n");
                } else {
                    notificacionEliminada = true;
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al leer el archivo de notificaciones: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (!notificacionEliminada) {
            JOptionPane.showMessageDialog(this, "No se encontró la notificación seleccionada.");
            return;
        }

        try (BufferedWriter bw = new BufferedWriter(new FileWriter(archivo))) {
            bw.write(contenidoArchivo.toString());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el archivo actualizado: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        JOptionPane.showMessageDialog(this, "Notificación eliminada exitosamente.");
        cargarNotificacionesATabla();
    }

    private void cargarDatosProductoSeleccionado() {
        int filaSeleccionada = ProductsTable.getSelectedRow();

        if (filaSeleccionada != -1) {
            String idProducto = ProductsTable.getValueAt(filaSeleccionada, 0).toString();
            String nombreProducto = ProductsTable.getValueAt(filaSeleccionada, 1).toString();
            String costoProducto = ProductsTable.getValueAt(filaSeleccionada, 2).toString();
            String marcaProducto = ProductsTable.getValueAt(filaSeleccionada, 3).toString();
            String proveedorProducto = ProductsTable.getValueAt(filaSeleccionada, 4).toString();
            String stockProducto = ProductsTable.getValueAt(filaSeleccionada, 5).toString();

            IDProductoLabel.setText(idProducto);
            IDNombreProductoLabel.setText(nombreProducto);
            IDCostoProductoLabel.setText(formatearValorCOP(Double.parseDouble(costoProducto)));
            IDMarcaProductoLabel.setText(marcaProducto);
            IDProveedorProductoLabel.setText(proveedorProducto);
            StockProductoLabel.setText(stockProducto + " Unidades");
        }
    }

    private void filtrarYCargarProductos() {
        List<String> productos = new ArrayList<>();
        String archivo = "productos.txt";
        File file = new File(archivo);

        if (!file.exists()) {
            JOptionPane.showMessageDialog(null, "No hay productos para mostrar.");
            return;
        }

        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                productos.add(linea);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        String proveedorFiltro = InputFiltroProveedor.getText().trim().toLowerCase();
        String nombreFiltro = InputFiltroProducto.getText().trim().toLowerCase();
        String marcaFiltro = InputFiltroMarca.getText().trim().toLowerCase();

        double precioMinimo = 0;
        double precioMaximo = Double.MAX_VALUE;

        try {
            if (!InputFiltroPrecio1.getText().isEmpty()) {
                precioMinimo = Double.parseDouble(InputFiltroPrecio1.getText().trim());
            }
            if (!InputFiltroPrecio2.getText().isEmpty()) {
                precioMaximo = Double.parseDouble(InputFiltroPrecio2.getText().trim());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese precios válidos.");
            return;
        }

        String estadoFiltro = (String) InputFiltroEstado.getSelectedItem();

        String estadoArchivoFiltro = "";
        if (estadoFiltro.equals("Disponibles")) {
            estadoArchivoFiltro = "Habilitado";
        } else if (estadoFiltro.equals("No Disponibles")) {
            estadoArchivoFiltro = "Deshabilitado";
        } else if (estadoFiltro.equals("Proximamente")) {
            estadoArchivoFiltro = "Proximamente";
        } else if (estadoFiltro.equals("Todos")) {
            estadoArchivoFiltro = "";
        }

        List<String> productosFiltrados = new ArrayList<>();
        for (String producto : productos) {
            String[] datosProducto = producto.split(",");

            if (datosProducto.length < 9) {
                continue;
            }

            String idProducto = datosProducto[0];
            String nombreProducto = datosProducto[1].toLowerCase();
            double costoProducto;
            try {
                costoProducto = Double.parseDouble(datosProducto[2]);
            } catch (NumberFormatException e) {
                continue;
            }
            String marcaProducto = datosProducto[4].toLowerCase();
            String proveedorProducto = datosProducto[6].toLowerCase();
            String stockProducto = datosProducto[8];
            String estadoProducto = datosProducto[10].toLowerCase();

            boolean cumpleProveedor = proveedorFiltro.isEmpty() || proveedorProducto.contains(proveedorFiltro);
            boolean cumpleNombre = nombreFiltro.isEmpty() || nombreProducto.contains(nombreFiltro);
            boolean cumpleMarca = marcaFiltro.isEmpty() || marcaProducto.contains(marcaFiltro);
            boolean cumplePrecio = costoProducto >= precioMinimo && costoProducto <= precioMaximo;
            boolean cumpleEstado = estadoArchivoFiltro.isEmpty() || estadoProducto.contains(estadoArchivoFiltro.toLowerCase());

            if (cumpleProveedor && cumpleNombre && cumpleMarca && cumplePrecio && cumpleEstado) {
                productosFiltrados.add(producto);
            }
        }

        DefaultTableModel model = (DefaultTableModel) ProductsTable.getModel();
        model.setRowCount(0);

        for (String producto : productosFiltrados) {
            String[] datos = producto.split(",");
            model.addRow(new Object[]{
                datos[0], // ID Producto
                datos[1], // Nombre Producto
                datos[2], // Costo Producto
                datos[4], // Marca Producto
                datos[6], // Proveedor Producto
                datos[8] // Stock Producto
            });
        }
    }

    private void cargarHistorialPedidosUsuario() {
        DefaultTableModel modelo = (DefaultTableModel) HistorialPedidosTable.getModel();
        modelo.setRowCount(0);

        File archivo = new File("ordenes.txt");
        if (!archivo.exists()) {
            System.out.println("Archivo ordenes.txt no existe.");
            return;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(archivo))) {
            String linea;
            while ((linea = reader.readLine()) != null) {
                String[] datos = linea.split(",");
                if (datos.length >= 13) {
                    if (datos[4].trim().equals(userID.trim())) {
                        String destino = datos[0].trim();
                        String origen = datos[1].trim();
                        String costo = datos[2].trim();
                        String idOrden = datos[3].trim();
                        String tracking = datos[7].trim();
                        String fechaCreacion = datos[8].trim();
                        String fechaEstimada = datos[9].trim();
                        String estado = datos[10].trim();
                        String tipoEntrega = datos[11].trim();
                        String direccionEntrega = destino.contains(":") ? destino.split(":", 2)[1].trim() : "";

                        modelo.addRow(new Object[]{
                            idOrden, tracking, fechaCreacion, fechaEstimada,
                            origen, destino, direccionEntrega, estado,
                            tipoEntrega, costo
                        });
                    }
                } else {

                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar historial de pedidos: " + e.getMessage());
            e.printStackTrace();
        }

        configurarTablaNoEditable(HistorialPedidosTable);
    }

    //SECCION DE PAGO (Estresante)
    private void procesarSimulacionPagoUsuario() {
        String idProducto = IDProductoLabelPago.getText().trim();
        if (idProducto.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto antes de proceder con el pago.");
            return;
        }

        if (!direccionConfirmada) {
            JOptionPane.showMessageDialog(null, "Debe confirmar la dirección antes de proceder con el pago.");
            return;
        }

        String destino = (String) InputDestinoPago.getSelectedItem();
        String direccion = InputDireccionPago.getText().trim();
        String terminalOrigen = (String) InputTerminalPago.getSelectedItem();
        String metodoPago = (String) InputMetodoPago.getSelectedItem();
        String entidadEmisora = (String) InputEntidadEmisoraPago.getSelectedItem();
        String plataforma = (String) InputPlataformaPago.getSelectedItem();
        String tipoEntrega = (String) InputEntregaPago.getSelectedItem();
        String simulacionPago = (String) InputSimulacionPago.getSelectedItem();
        String fondosPagoText = FondosPago.getText().trim();
        String telefono = InputTelefonoPago.getText().trim();

        if (destino.equals("Ninguno") || terminalOrigen.equals("Ninguno") || metodoPago.equals("Ninguno")
                || entidadEmisora.equals("Ninguno") || plataforma.equals("Ninguno") || tipoEntrega.equals("Ninguno")
                || simulacionPago.equals("Ninguno") || telefono.isEmpty() || direccion.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor complete todos los campos antes de continuar.");
            return;
        }

        String[] datosProducto = obtenerDatosProductoPorID(idProducto);
        if (datosProducto == null) {
            JOptionPane.showMessageDialog(null, "No se encontró el producto seleccionado.");
            return;
        }

        String costoProducto = datosProducto[0];
        String tipoProducto = datosProducto[1];
        String tipoPeso = PesoProductoLabelPago.getText().trim();
        double costo = Double.parseDouble(costoProducto);

        double costoEnvio = calcularCostoEnvio(terminalOrigen, destino, tipoPeso);
        if (tipoEntrega.equals("Urgente")) {
            costoEnvio *= 1.25;
        }

        double montoTotal = costo + costoEnvio;

        double fondosUsados = 0;
        if (!fondosPagoText.isEmpty()) {
            try {
                fondosUsados = Double.parseDouble(fondosPagoText);
                double saldoDisponible = obtenerBalanceUsuario(userID);

                if (fondosUsados > saldoDisponible) {
                    JOptionPane.showMessageDialog(null, "No tienes suficiente saldo para usar esa cantidad.");
                    return;
                }

                if (fondosUsados > montoTotal) {
                    fondosUsados = montoTotal;
                }

                montoTotal -= fondosUsados;
                balanceDescontado = String.valueOf(fondosUsados);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese un valor numérico válido en 'Fondos a usar'.");
                return;
            }
        }

        String codigoPago = generarCodigoPago();
        String codigoTracking = generarCodigoTrackingUnico();
        String fechaPago = obtenerFechaActual();
        String fechaEstimada = calcularFechaEstimada();

        DestinoPagoMostrarLabel.setText(destino + ", " + direccion);
        TipoEntregaLabelPago.setText(tipoEntrega);
        TerminalOrigenLabelPago.setText(terminalOrigen);
        CostoEnvioPagoLabel.setText(String.valueOf(costoEnvio));
        MontoTotalPagoLabel.setText(formatearValorCOP(montoTotal));

        if (!simulacionPago.equals("Fallido")) {
            String idOrden = generarIDOrden();
            String emailCliente = InputEmailPago.getText().trim();
            String estadoPaquete = "En Espera";

            String lineaOrden = destino + ": " + InputDireccionPago.getText() + "," + terminalOrigen + "," + costoEnvio + "," + idOrden + "," + userID + ","
                    + telefono + "," + emailCliente + "," + codigoTracking + "," + fechaPago + ","
                    + fechaEstimada + "," + estadoPaquete + "," + tipoEntrega + "," + tipoPeso;
            guardarEnArchivo("ordenes.txt", lineaOrden);

            String lineaPago = codigoPago + "," + idOrden + "," + userID + "," + fechaPago + "," + montoTotal + ","
                    + tipoProducto + "," + metodoPago + "," + entidadEmisora + "," + plataforma + "," + "En revisión";
            guardarEnArchivo("pagos.txt", lineaPago);

            if (!balanceDescontado.equals("0")) {
                try {
                    double cantidadDescontada = Double.parseDouble(balanceDescontado);
                    actualizarBalanceUsuario(userID, cantidadDescontada);
                } catch (NumberFormatException e) {

                }
            }

            actualizarStockProducto(idProducto);
            JOptionPane.showMessageDialog(null, "Pago simulado con éxito y orden registrada.");

            crearNotificacion(userID, "Pago exitoso", "Tu pago ha sido listeado exitosamente. Orden registrada.", "Alta");

            if (fondosUsados == 0) {
                double recompensa = (costo + costoEnvio) * 0.10;
                sumarBalanceUsuario(userID, recompensa);
                JOptionPane.showMessageDialog(null, "Has recibido un 10% de la compra (" + formatearValorCOP(recompensa) + ") en fondos por no usar saldo.");
            }

            cargarHistorialPedidosUsuario();

            MainTabs.setSelectedIndex(1);
            restablecerFormularioPagoUsuario();
        } else {
            String lineaPago = codigoPago + ",--," + userID + "," + fechaPago + "," + montoTotal + "," + tipoProducto + ","
                    + metodoPago + "," + entidadEmisora + "," + plataforma + "," + "Fallido";
            guardarEnArchivo("pagos.txt", lineaPago);

            crearNotificacion(userID, "Pago fallido", "Tu pago no ha sido procesado correctamente. Intenta nuevamente.", "Alta");

            JOptionPane.showMessageDialog(null, "Pago fallido simulado. No se generó orden.");
            
            MainTabs.setSelectedIndex(1);
            restablecerFormularioPagoUsuario();
        }
    }

    private void crearNotificacion(String idUsuario, String asunto, String mensaje, String prioridad) {
        String idNotificacion = generarIDNotificacionUnica();
        String fecha = obtenerFechaActualX();

        String estado = "No Leído";

        guardarNotificacionGenerica(idNotificacion, idUsuario, fecha, asunto, mensaje, estado, prioridad);

        JOptionPane.showMessageDialog(null, "Notificación enviada: " + mensaje);
    }

    private String generarIDNotificacionUnica() {
        File archivo = new File("notificaciones.txt");
        Set<String> idsExistentes = new HashSet<>();
        int contador = 1;

        try {
            if (!archivo.exists()) {
                archivo.createNewFile();
            } else {
                BufferedReader br = new BufferedReader(new FileReader(archivo));
                String linea;
                while ((linea = br.readLine()) != null) {
                    String[] datos = linea.split(",", -1);
                    if (datos.length > 0) {
                        idsExistentes.add(datos[0]);
                    }
                }
                br.close();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error leyendo el archivo de notificaciones: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        String idNotificacion;
        do {
            idNotificacion = String.format("NOT%06d", contador);
            contador++;
        } while (idsExistentes.contains(idNotificacion));

        return idNotificacion;
    }

    private String obtenerFechaActualX() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy,HH:mm");
        Date fecha = new Date();
        return sdf.format(fecha);
    }

    private void guardarNotificacionGenerica(String idNotificacion, String idUsuario, String fechaEnvio, String asunto, String mensaje, String estado, String prioridad) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter("notificaciones.txt", true))) {
            bw.write(idNotificacion + "," + idUsuario + "," + fechaEnvio + "," + asunto + "," + mensaje + "," + estado + "," + prioridad);
            bw.newLine();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error guardando la notificación: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void sumarBalanceUsuario(String userID, double cantidadASumar) {
        File archivo = new File("usuarios.txt");
        File archivoTemporal = new File("usuarios_temp.txt");

        try (BufferedReader br = new BufferedReader(new FileReader(archivo)); BufferedWriter bw = new BufferedWriter(new FileWriter(archivoTemporal))) {

            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");

                if (datos.length >= 11 && datos[0].equals(userID)) {
                    double balanceActual = Double.parseDouble(datos[10]);
                    double nuevoBalance = balanceActual + cantidadASumar;
                    datos[10] = String.valueOf((int) nuevoBalance);
                    linea = String.join(",", datos);
                }

                bw.write(linea);
                bw.newLine();
            }

            br.close();
            bw.close();

            if (archivo.delete()) {
                archivoTemporal.renameTo(archivo);
            }

        } catch (IOException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error al otorgar fondos: " + e.getMessage());
        }
    }

    private String[] obtenerDatosProductoPorID(String idProducto) {
        try (BufferedReader br = new BufferedReader(new FileReader("productos.txt"))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");
                if (datos[0].equals(idProducto)) {
                    return new String[]{datos[2], datos[5], datos[10]};
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al leer productos.txt");
        }
        return null;
    }

    private double calcularCostoEnvio(String origen, String destino, String pesoPaquete) {
        Map<String, Double> precios = new HashMap<>();
        precios.put("Bogota-Barranquilla", 25000.0);
        precios.put("Bogota-Cartagena", 20000.0);
        precios.put("Bogota-Cali", 18000.0);
        precios.put("Bogota-Cucuta", 24000.0);
        precios.put("Bogota-Bucaramanga", 22000.0);
        precios.put("Bogota-Pereira", 21000.0);
        precios.put("Bogota-SantaMarta", 26000.0);
        precios.put("Bogota-Manizales", 20000.0);
        precios.put("Bogota-Armenia", 21000.0);
        precios.put("Bogota-Pasto", 27000.0);
        precios.put("Bogota-Ibagué", 23000.0);
        precios.put("Bogota-Villavicencio", 24000.0);
        precios.put("Bogota-Neiva", 25000.0);
        precios.put("Bogota-Popayan", 28000.0);
        precios.put("Bogota-Sincelejo", 25000.0);
        precios.put("Bogota-Monteria", 26000.0);
        precios.put("Bogota-Riohacha", 29000.0);
        precios.put("Bogota-Tunja", 23000.0);
        precios.put("Bogota-Valledupar", 27000.0);
        precios.put("Cundinamarca-Barranquilla", 23000.0);
        precios.put("Cundinamarca-Cartagena", 22000.0);
        precios.put("Cundinamarca-Cali", 21000.0);
        precios.put("Cundinamarca-Medellin", 24000.0);
        precios.put("Cundinamarca-Pereira", 22000.0);
        precios.put("Cundinamarca-Manizales", 21000.0);
        precios.put("Cundinamarca-Armenia", 22000.0);
        precios.put("Cundinamarca-Pasto", 25000.0);
        precios.put("Cundinamarca-Ibagué", 23000.0);
        precios.put("Cundinamarca-Villavicencio", 24000.0);
        precios.put("Cundinamarca-Neiva", 25000.0);
        precios.put("Cundinamarca-Popayan", 26000.0);
        precios.put("Cundinamarca-Sincelejo", 25000.0);
        precios.put("Cundinamarca-Monteria", 26000.0);
        precios.put("Cundinamarca-Riohacha", 27000.0);
        precios.put("Cundinamarca-Tunja", 23000.0);
        precios.put("Cundinamarca-Valledupar", 26000.0);
        precios.put("Medellin-Barranquilla", 27000.0);
        precios.put("Medellin-Cartagena", 25000.0);
        precios.put("Medellin-Cali", 18000.0);
        precios.put("Medellin-Pereira", 22000.0);
        precios.put("Medellin-SantaMarta", 26000.0);
        precios.put("Medellin-Manizales", 20000.0);
        precios.put("Medellin-Armenia", 21000.0);
        precios.put("Medellin-Pasto", 28000.0);
        precios.put("Medellin-Ibagué", 23000.0);
        precios.put("Medellin-Villavicencio", 24000.0);
        precios.put("Medellin-Neiva", 25000.0);
        precios.put("Medellin-Popayan", 27000.0);
        precios.put("Medellin-Sincelejo", 26000.0);
        precios.put("Medellin-Monteria", 27000.0);
        precios.put("Medellin-Riohacha", 29000.0);
        precios.put("Medellin-Tunja", 23000.0);
        precios.put("Medellin-Valledupar", 27000.0);
        precios.put("Cartagena-Barranquilla", 15000.0);
        precios.put("Cartagena-Cali", 21000.0);
        precios.put("Cartagena-Pereira", 22000.0);
        precios.put("Cartagena-SantaMarta", 18000.0);
        precios.put("Cartagena-Manizales", 23000.0);
        precios.put("Cartagena-Armenia", 22000.0);
        precios.put("Cartagena-Pasto", 24000.0);
        precios.put("Cartagena-Ibagué", 23000.0);
        precios.put("Cartagena-Villavicencio", 24000.0);
        precios.put("Cartagena-Neiva", 25000.0);
        precios.put("Cartagena-Popayan", 26000.0);
        precios.put("Cartagena-Sincelejo", 23000.0);
        precios.put("Cartagena-Monteria", 25000.0);
        precios.put("Cartagena-Riohacha", 27000.0);
        precios.put("Cartagena-Tunja", 23000.0);
        precios.put("Cartagena-Valledupar", 24000.0);

        double costoEnvio = precios.getOrDefault(origen + "-" + destino, 30000.0);

        if (pesoPaquete.equals("Ligero")) {
            costoEnvio *= 1.0;
        } else if (pesoPaquete.equals("Medio")) {
            costoEnvio *= 1.05;
        } else if (pesoPaquete.equals("Pesado")) {
            costoEnvio *= 1.15;
        } else if (pesoPaquete.equals("Industrial")) {
            costoEnvio *= 1.30;
        }

        return costoEnvio;
    }

    private String obtenerFechaActual() {
        return new SimpleDateFormat("dd-MM-yyyy").format(new Date());
    }

    private String calcularFechaEstimada() {
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.DAY_OF_YEAR, 3);
        return new SimpleDateFormat("dd-MM-yyyy").format(calendar.getTime());
    }

    private String generarCodigoPago() {
        return "PAY" + (int) (Math.random() * 999999);
    }

    private String generarIDOrden() {
        return String.valueOf((int) (Math.random() * 99999));
    }

    private void guardarEnArchivo(String nombreArchivo, String linea) {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(nombreArchivo, true))) {
            bw.write(linea);
            bw.newLine();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al escribir en " + nombreArchivo);
        }
    }

    private double obtenerBalanceUsuario(String userID) {
        try (BufferedReader br = new BufferedReader(new FileReader("usuarios.txt"))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");

                if (datos[0].equals(userID)) {
                    return Double.parseDouble(datos[10]);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al leer usuarios.txt");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error al convertir el saldo del usuario.");
        }
        return 0.0;
    }

    private void actualizarBalanceUsuario(String userID, double cantidadARestar) {
        File archivo = new File("usuarios.txt");
        File archivoTemporal = new File("usuarios_temp.txt");

        try (BufferedReader br = new BufferedReader(new FileReader(archivo)); BufferedWriter bw = new BufferedWriter(new FileWriter(archivoTemporal))) {

            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");

                if (datos.length >= 11 && datos[0].equals(userID)) {
                    double balanceActual = Double.parseDouble(datos[10]);
                    double nuevoBalance = balanceActual - cantidadARestar;

                    if (nuevoBalance < 0) {
                        nuevoBalance = 0;
                    }
                    datos[10] = String.valueOf((int) nuevoBalance);
                    linea = String.join(",", datos);
                }

                bw.write(linea);
                bw.newLine();
            }

            br.close();
            bw.close();

            if (archivo.delete()) {
                archivoTemporal.renameTo(archivo);
            }

        } catch (IOException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar el balance del usuario: " + e.getMessage());
        }
    }

    private void actualizarStockProducto(String idProducto) {
        File inputFile = new File("productos.txt");
        File tempFile = new File("productos_temp.txt");

        try (BufferedReader reader = new BufferedReader(new FileReader(inputFile)); BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))) {
            String linea;
            while ((linea = reader.readLine()) != null) {
                String[] datos = linea.split(",");
                if (datos[0].equals(idProducto)) {
                    int nuevoStock = Integer.parseInt(datos[8]) - 1;
                    datos[8] = String.valueOf(Math.max(nuevoStock, 0));
                    linea = String.join(",", datos);
                }
                writer.write(linea);
                writer.newLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar productos.txt");
            return;
        }

        inputFile.delete();
        tempFile.renameTo(inputFile);
    }

    private String obtenerEmailUsuario(String userID) {
        try (BufferedReader br = new BufferedReader(new FileReader("usuarios.txt"))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");
                if (datos.length >= 11 && datos[10].equals(userID)) {
                    return datos[6];
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al leer usuarios.txt para obtener el email.");
        }
        return "";
    }

    private String generarCodigoTrackingUnico() {
        String letras = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        Random rand = new Random();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < 10; i++) {
            sb.append(letras.charAt(rand.nextInt(letras.length())));
        }
        return sb.toString();
    }

    private void actualizarCostosEnvioYTotal() {
        String direccion = InputDireccionPago.getText();
        String tipoEntrega = (String) InputEntregaPago.getSelectedItem();

        String terminalOrigen = (String) InputTerminalPago.getSelectedItem();
        String destino = (String) InputDestinoPago.getSelectedItem();

        String pesoProductoTexto = PesoProductoLabelPago.getText().trim();

        String costoProductoTexto = IDCostoProductoLabelPago.getText().replace("$", "").replace("COP", "").replace(".", "").trim();
        double costoProducto = 0.0;
        try {
            costoProducto = Double.parseDouble(costoProductoTexto);
        } catch (NumberFormatException e) {
            
        }

        double costoEnvio = calcularCostoEnvio(terminalOrigen, destino, pesoProductoTexto);

        if (tipoEntrega.equals("Urgente")) {
            costoEnvio *= 1.25;
        }

        double montoTotal = costoProducto + costoEnvio;

        CostoEnvioPagoLabel.setText(String.format("%.2f", costoEnvio));
        MontoTotalPagoLabel.setText(String.format("%.2f", montoTotal));
        montoOriginalPago = MontoTotalPagoLabel.getText();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AllayNexoIcon;
    private javax.swing.JButton BAplicarFondos;
    private javax.swing.JButton BCerrarSesion;
    private javax.swing.JButton BConfirmarDireccion;
    private javax.swing.JButton BEliminarNotificacion;
    private javax.swing.JButton BFiltrarProductos;
    private javax.swing.JButton BHistorialPagosMain;
    private javax.swing.JButton BHistorialPedidosMain;
    private javax.swing.JButton BInicioMain;
    private javax.swing.JButton BMarcarNotificacionLeido;
    private javax.swing.JButton BNotificacionesMain;
    private javax.swing.JButton BProcesoPago;
    private javax.swing.JButton BRegresarTienda;
    private javax.swing.JButton BReiniciarFiltros;
    private javax.swing.JButton BTiendaOnlinerMain;
    private javax.swing.JButton BValidarPago;
    private javax.swing.JLabel CostoEnvioPagoLabel;
    private javax.swing.JLabel DestinoPagoMostrarLabel;
    private javax.swing.JTextField FondosPago;
    private javax.swing.JLabel HistorialPagosIcon;
    private allaynexo.PanelRound HistorialPagosMainPanel;
    private javax.swing.JPanel HistorialPagosTab;
    private javax.swing.JLabel HistorialPedidosIcon;
    private allaynexo.PanelRound HistorialPedidosMainPanel;
    private javax.swing.JPanel HistorialPedidosTab;
    private javax.swing.JTable HistorialPedidosTable;
    private javax.swing.JLabel IDCostoProductoLabel;
    private javax.swing.JLabel IDCostoProductoLabelPago;
    private javax.swing.JLabel IDMarcaProductoLabel;
    private javax.swing.JLabel IDMarcaProductoLabelPago;
    private javax.swing.JLabel IDNombreProductoLabel;
    private javax.swing.JLabel IDNombreProductoLabelPago;
    private javax.swing.JLabel IDProductoLabel;
    private javax.swing.JLabel IDProductoLabelPago;
    private javax.swing.JLabel IDProveedorProductoLabel;
    private javax.swing.JLabel IDProveedorProductoLabelPago;
    private javax.swing.JLabel InicioBalanceUsuarioLabel;
    private javax.swing.JLabel InicioIcon;
    private allaynexo.PanelRound InicioMainPanel;
    private javax.swing.JLabel InicioNotificacionesSinLeerLabel;
    private javax.swing.JLabel InicioTotalPedidosLabel;
    private javax.swing.JComboBox<String> InputDestinoPago;
    private javax.swing.JTextField InputDireccionPago;
    private javax.swing.JTextField InputEmailPago;
    private javax.swing.JComboBox<String> InputEntidadEmisoraPago;
    private javax.swing.JComboBox<String> InputEntregaPago;
    private javax.swing.JComboBox<String> InputFiltroEstado;
    private javax.swing.JTextField InputFiltroMarca;
    private javax.swing.JTextField InputFiltroPrecio1;
    private javax.swing.JTextField InputFiltroPrecio2;
    private javax.swing.JTextField InputFiltroProducto;
    private javax.swing.JTextField InputFiltroProveedor;
    private javax.swing.JComboBox<String> InputMetodoPago;
    private javax.swing.JComboBox<String> InputPlataformaPago;
    private javax.swing.JComboBox<String> InputSimulacionPago;
    private javax.swing.JTextField InputTelefonoPago;
    private javax.swing.JComboBox<String> InputTerminalPago;
    private allaynexo.PanelRound MainAppSelector;
    private javax.swing.JTabbedPane MainTabs;
    private javax.swing.JLabel MontoTotalPagoLabel;
    private javax.swing.JLabel NotificacionesIcon;
    private allaynexo.PanelRound NotificacionesMainPanel;
    private javax.swing.JPanel NotificacionesTab;
    private javax.swing.JTable NotificacionesUsuarioTabla;
    private javax.swing.JPanel OverviewTab;
    private javax.swing.JTable PaymentsTable;
    private javax.swing.JLabel PesoProductoLabelPago;
    private javax.swing.JPanel ProcesoPagoTab;
    private javax.swing.JTable ProductsTable;
    private javax.swing.JLabel StockProductoLabel;
    private javax.swing.JLabel TerminalOrigenLabelPago;
    private javax.swing.JLabel TiendaIcon;
    private allaynexo.PanelRound TiendaOnlineMainPanel;
    private javax.swing.JPanel TiendaOnlineTab;
    private javax.swing.JLabel TipoEntregaLabelPago;
    private javax.swing.JLabel TotalBalanceIconX;
    private javax.swing.JLabel TotalNotificacionesIconX;
    private javax.swing.JLabel TotalPedidosIconX;
    private allaynexo.PanelRound TotalUsersOverviewPanel;
    private allaynexo.PanelRound TotalUsersOverviewPanel10;
    private allaynexo.PanelRound TotalUsersOverviewPanel3;
    private allaynexo.PanelRound TotalUsersOverviewPanel9;
    private javax.swing.JLabel UserNameLabelMain;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private allaynexo.PanelRound panelRound1;
    private allaynexo.PanelRound panelRound10;
    private allaynexo.PanelRound panelRound11;
    private allaynexo.PanelRound panelRound12;
    private allaynexo.PanelRound panelRound13;
    private allaynexo.PanelRound panelRound14;
    private allaynexo.PanelRound panelRound15;
    private allaynexo.PanelRound panelRound16;
    private allaynexo.PanelRound panelRound17;
    private allaynexo.PanelRound panelRound18;
    private allaynexo.PanelRound panelRound19;
    private allaynexo.PanelRound panelRound2;
    private allaynexo.PanelRound panelRound20;
    private allaynexo.PanelRound panelRound3;
    private allaynexo.PanelRound panelRound4;
    private allaynexo.PanelRound panelRound5;
    private allaynexo.PanelRound panelRound6;
    private allaynexo.PanelRound panelRound7;
    private allaynexo.PanelRound panelRound8;
    private allaynexo.PanelRound panelRound9;
    // End of variables declaration//GEN-END:variables
}
